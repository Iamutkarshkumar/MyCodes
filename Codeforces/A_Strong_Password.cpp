// // ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡀⢀⠀⡀⠀⡀⠀⡀⠀⡀⠀⠀⠀⠀⠀⢀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⢀⢀⢀⠠⡀⠄⠤⡠⠤⡠
// // ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠄⡐⢀⠂⡐⠌⡠⢑⠈⠔⡠⢁⠅⡡⠁⢅⠁⢅⠠⢁⠊⢄⠑⡈⡐⢁⠑⠠⠂⢄⠁⡂⠈⠢⢈⠔⢈⠐⡈⢌⠈⢌⠨⠈⠄⠊⠄⢌⠈⢌⠈⡂⠡⡈⠂⠌⡐⢀⠂⡐⢀⠂⡐⢀⠂⢂⠐⡁⠨⡀⢑⠈⡐⠄⠢⠠⡁⠢⡈⠌⠢⢂⠕⡨
// // ⢀⠄⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠡⠈⠂⢂⠐⠄⢌⠰⡈⢔⢁⢑⠡⢂⠂⢂⠐⡐⠄⠌⠠⠂⢄⠡⠂⡐⠄⡈⠄⠡⠁⡊⢀⠢⢈⠈⠂⠄⢂⠡⠈⠔⠠⡈⠄⢂⠁⡊⠠⡁⠂⠔⠠⠂⠌⡐⢀⠑⡀⠢⠀⢅⠐⡀⢂⠐⠠⠈⠄⠐⡀⢂⠐⠠⠈⢄⠈⡂⠢⠈⠔⠠⠑⡁⠢⠐⡐
// // ⢀⠂⡐⠠⢁⠐⠀⢂⠐⠀⠄⡀⢀⠀⡀⢀⠀⠠⠀⠄⢁⠈⡐⠀⡡⠈⠄⠠⠁⠢⢈⠢⢂⠡⠂⠡⡀⢊⠀⢌⠠⠂⡡⠑⡈⠄⢂⠡⢀⠢⠈⡠⠑⡈⠄⢂⠢⠠⠡⡀⢀⠀⠀⡁⠈⠂⠔⢈⠄⠂⠌⠠⠠⡁⠌⡠⠑⠠⠂⢄⠡⢀⠅⠨⢀⠂⡐⠠⠈⡐⠠⠈⠄⠐⠀⠌⡀⠡⠐⡀⢂⠡⢈⠂⠡⡈⠄⡑⡈⡐
// // ⠀⠢⠀⠅⠠⠈⠄⡁⠠⠁⡐⠀⠄⠠⠀⠄⠠⠁⠐⠀⠂⠠⠐⠠⠀⠂⠨⢀⠑⠠⢁⠐⠄⢁⠌⢐⠂⢀⠂⠢⠐⡁⠐⠄⠢⡈⠠⠂⢂⠐⡐⠄⠢⠐⣈⠤⡢⠃⠀⠠⠀⡀⠂⢀⠈⠀⠐⠠⠐⠁⠌⢂⢁⠐⡀⠢⠈⢄⠁⡂⠐⢄⠈⡂⠐⠄⠐⡀⠂⠄⠐⠀⠌⠀⠑⣦⣀⠐⠀⢂⠐⡀⢂⠁⡂⠐⡐⠠⠂⠨
// // ⡈⠄⠁⠌⡀⠡⠐⠀⢂⠐⢀⠈⡀⠂⡁⠐⠠⢈⠀⠡⠈⠐⠀⢂⠈⠠⠁⢄⠈⡐⠀⡡⠈⠄⢂⠃⢀⠂⡁⢊⠄⢌⠈⠔⢁⢀⠊⠠⡁⠌⡠⡌⠒⠉⡠⠊⠀⠀⠐⠀⠄⢀⠐⠀⡀⠁⠐⠀⡀⠁⠌⡀⠢⢈⠀⡂⠡⢀⠂⠌⢐⠀⠂⠌⠐⠈⠄⠐⠀⠂⢁⠈⠠⠈⠀⢣⢎⢻⢢⣄⠀⠔⠀⢂⠈⡀⠂⠌⠠⠁
// // ⠄⡈⢐⠀⠂⠄⡁⠈⠄⠐⡀⠐⠀⢂⠀⡁⠐⡀⠈⠄⠈⠄⠁⠄⠠⠁⠂⠠⠂⠠⠡⡀⡑⢈⡌⠀⠄⠌⢐⠂⡐⠄⠌⡐⠀⡂⡈⢂⡔⠝⠀⢀⠈⠊⠀⠀⠀⡀⠂⠐⠀⠄⠀⠂⢀⠈⠀⠂⢀⠐⠀⠀⠂⠐⠄⡐⠁⠄⠂⠡⢀⠁⡡⠈⡈⠂⡈⢀⠡⠈⡀⠀⠂⠐⠀⢹⡪⠀⠑⠪⡳⣄⠈⠠⠀⠌⢀⠁⢂⠁
// // ⠀⠔⠀⠌⠐⠠⢀⠁⠂⡐⠀⡁⢈⠠⠀⡐⠠⠀⠡⠀⠡⠀⠡⠀⠡⢀⠁⢂⠌⢂⠡⠠⡈⡰⠀⢀⠊⢀⠇⠐⠄⠊⠠⢈⠐⢄⡜⠁⠀⠄⢂⠠⠂⠁⢄⢀⠀⠀⠐⠀⠀⠄⠈⠀⠀⠀⡁⠠⠀⠤⠀⠁⠈⠐⠠⠐⠁⠌⠠⡁⠐⠠⠐⡀⠐⡀⠐⠀⠄⠂⡀⢈⠀⡁⠀⢸⢎⠀⡀⢀⠀⠙⢵⡀⠐⠀⢂⠐⠀⠌
// // ⠌⢀⠂⡈⢀⠁⠄⢈⠀⡐⠠⠀⠂⡀⠂⡀⠂⡈⢀⠁⡐⠁⠄⢁⠂⠄⠠⡁⠢⡀⠑⠄⡠⠃⠀⠠⠈⡌⠠⠑⠠⡁⡁⢂⡜⠁⠀⡠⠑⠠⠃⢀⠀⠁⠄⠠⢁⠁⠂⠢⢄⡀⠀⠈⠀⠐⠠⠁⢈⠂⠀⠈⠀⡁⢀⠈⡐⢁⠂⢄⠁⠊⠠⢀⠁⠠⠁⡈⢀⠂⠠⠀⠄⠠⠀⢸⢳⠀⢀⠂⡐⠠⠀⠳⡄⠁⠠⠈⠐⡀
// // ⡐⠀⠄⠐⠀⠂⡐⠠⠀⠄⠠⠈⠠⠀⠂⢀⠂⠠⠀⠄⡀⠂⠐⡀⠐⠠⡁⠔⢐⠌⡈⠂⡸⠀⠀⠈⢠⠃⠨⡀⢁⠄⡬⠃⠀⢄⠡⠀⠔⠁⡀⠂⠀⠂⢀⠂⠄⠈⠈⠀⠂⠨⠄⠀⠁⠐⢀⠀⠂⠄⠀⠐⠀⠄⠀⠠⠀⠐⡀⠂⠌⡈⢐⠀⠌⢀⠂⠠⢀⠐⢀⠂⠐⠀⠄⢸⡣⠀⠄⠂⠠⠂⡐⠀⠘⡄⠀⡁⠐⠀
// // ⠐⠠⢈⠀⡁⠂⠠⠐⠀⠂⠠⠁⠐⠈⠀⠂⢀⠂⠁⠄⡀⠁⠂⠠⠁⠢⠐⡈⢐⠆⢈⠄⡹⠀⠀⠀⡎⠠⠁⠠⢂⠎⠀⠠⡈⢀⠄⠊⡀⢄⠈⠀⠈⡀⠢⠀⠀⠂⢀⠈⠀⠡⠈⡂⠠⠀⠠⠀⠈⡂⠐⠀⠄⢀⠁⠐⠀⠄⢈⠐⠄⢂⠐⡀⠂⠄⠠⠁⠠⠐⠀⠄⢁⠐⠀⢸⡕⠀⢂⠁⡂⢐⠀⡁⢂⠀⠀⠄⠈⠠
// // ⢀⠁⠠⠀⠄⢈⠠⠀⡁⢈⠀⠌⠀⡁⢈⠀⠂⢀⠁⠄⢀⠁⠌⠠⠁⡈⢂⠐⢈⠇⠠⠀⡳⠀⠀⢀⠇⠠⠁⡜⠁⠀⡨⢀⠖⠁⠀⠖⠀⠄⠀⢈⠀⠔⠀⡠⠃⠀⢀⠂⠁⠀⠂⡐⠐⠠⠀⠐⠀⠈⠐⠀⡀⢀⠀⡁⠀⠂⠠⡑⢀⠂⡐⢀⠡⠈⡠⠈⡀⠂⢁⠐⠀⠄⠂⢸⠎⠀⠄⢂⠐⡀⢂⠐⠀⢁⠐⠀⠁⡐
// // ⠠⢀⠁⡐⠀⠂⠀⠄⠠⢀⠀⠂⠐⠀⠄⢀⠁⠠⠀⠂⡀⠂⠄⡁⠂⢈⠄⠨⠀⡯⢀⠁⢱⠀⠀⢰⠁⢀⠊⡠⠂⢐⠔⠕⠁⡔⡅⠀⢂⠐⡀⠂⠄⠀⠀⠀⠀⡀⢀⠀⠈⠀⠂⠀⠁⠊⠀⡁⠀⠐⠀⠠⠀⠀⢀⠀⡈⠀⠀⡊⠄⢂⠐⠀⠔⠀⠄⠐⠀⠌⠀⠄⢁⠠⠀⣏⡃⠀⢂⠐⡀⠂⠀⠀⠀⢐⠀⠐⠀⠄
// // ⢀⠂⠄⠠⠈⡀⢁⠐⠠⠀⠄⢁⠈⡀⠂⠠⠀⡁⠐⠠⠀⠌⠠⢀⠅⠀⠢⡈⢀⠳⣁⠂⠨⡀⠀⠨⠀⢂⡜⠀⡰⠡⠁⢀⠙⠨⠂⢀⠖⡤⠀⠂⡀⣈⡠⠁⠐⢈⠐⠄⣂⠀⠐⠀⠐⠀⢀⠀⢀⠁⠀⠄⠀⠂⠀⠀⡀⠈⠀⠨⠂⠄⠡⠈⠄⡈⠄⠁⠌⠠⠈⠠⠀⠄⢀⢷⠀⡈⢀⠂⠀⠄⠈⠀⠂⠠⠁⠀⠂⠈
// // ⠡⠀⢊⠐⡀⢂⠠⠂⠐⡀⠂⠄⠠⠀⠌⠐⠠⢀⠁⡂⠡⠈⡂⠐⠄⠈⢢⠀⢂⠱⠨⡐⠀⠇⠀⠀⢌⠮⠀⠜⢈⠰⡩⢣⢢⡁⠄⡤⣈⠈⠀⢸⢐⠥⡍⠀⠀⠀⠂⠐⠀⠌⠠⡁⢬⢀⠀⠀⢀⠀⠄⠀⠐⠀⠈⠀⠀⠈⠀⠈⡊⠄⡁⠂⡐⠀⠌⠐⡀⠁⠌⠐⡀⠂⢸⡃⠠⠐⠀⠀⠠⠀⠀⠂⠀⠨⠀⠠⠈⠀
// // ⠅⠨⢀⠂⡐⠄⢂⠁⠢⠀⠌⠠⡁⠌⠂⡑⠐⡀⠢⢀⠑⠄⢌⢈⠂⠠⢘⠠⠀⡈⡂⢥⠀⢘⠀⢠⠃⠃⣐⠂⢀⡀⠀⣤⣄⠀⢘⠰⠌⡨⢀⡅⡠⡃⠀⠀⢀⠅⠀⢤⠈⠄⠊⠠⡀⢁⠢⢁⡀⠀⠀⡀⠁⠠⠀⠁⡀⠈⠀⡀⠈⠔⠠⠈⢄⢈⠐⠄⠠⠁⠌⠠⠐⠀⣯⠂⠀⢀⠀⠂⠀⠐⠀⡀⠁⡈⢀⠀⠂⢀
// // ⠄⠡⠐⡀⠂⠔⢀⠅⠨⡀⢑⠐⠄⢊⠐⠠⠁⢄⠁⠢⢈⠂⠔⠠⠂⠐⢨⠂⠄⠀⠱⠀⠆⠀⠀⠈⡳⣤⡹⣦⣀⣈⡥⠤⢄⠀⡨⡊⢠⢃⠰⠄⠃⠀⢀⡰⠁⠀⡈⠀⠄⠊⠀⠂⢐⠀⠔⢀⠀⠑⠄⡀⠀⠠⠀⢀⠀⠐⠀⠀⡀⠀⠁⠊⢄⠢⢈⠄⠡⢈⠄⡡⢈⡸⡊⠀⠀⠀⢀⠀⠈⢀⠀⠀⡀⠐⠀⠄⢁⠀
// // ⠁⡂⠡⠀⢅⠨⢀⠂⠢⠠⡁⠌⢂⠡⠈⢄⠑⡀⡁⠑⢄⢈⢂⠁⠌⠠⠘⡄⢁⠀⠊⠆⢘⠀⢁⠀⠢⣹⣟⢮⡵⣴⣜⣔⣡⢃⡼⣆⢣⣿⡀⠃⢀⡤⢪⠂⠐⠠⠀⠁⣀⠀⠀⢀⢁⠐⡀⢂⠁⠌⠠⠈⠊⢄⢀⠀⠀⠐⠀⠄⠀⠠⠀⢀⠀⠈⠀⠢⢁⠂⠔⡠⢢⠋⠀⠀⠀⢀⠀⠀⠁⠀⠠⠀⢀⠁⡈⢂⠔⠠
// // ⠐⠠⢈⠂⡐⢀⠂⢌⠐⡡⠐⠌⡐⠄⡑⢀⠢⠠⢈⠂⡐⢀⠂⡈⠐⡐⠀⠸⢀⠀⠀⠌⠠⠂⠀⠄⠂⠌⣿⣕⣟⢮⣞⢵⣝⡽⣝⣽⣘⡥⢒⣰⢟⡧⠱⣄⠁⠄⠀⢴⢩⠉⠀⡠⡫⠀⠀⠐⢀⠊⡀⢁⠂⠄⢁⠢⢈⠀⠀⠀⠄⠀⠄⠀⢀⠀⢀⠀⠀⠈⠈⠂⠢⠀⠀⢀⠀⡀⠀⠁⠐⠀⠠⠀⠠⢐⢅⠪⡐⣑
// // ⢀⠁⡂⢐⠈⠄⢂⠢⢈⠔⡈⢂⠔⠐⠄⡡⠐⠄⠡⠠⡈⢀⠂⡈⠄⠂⠈⠄⢇⠀⢀⣦⠁⡈⢄⠀⠄⡈⢘⢮⡳⣯⡺⣕⢯⡺⣵⡣⣟⢮⣫⢗⣯⡇⢳⠀⡀⠄⠀⡣⠃⠀⡰⡱⠀⠀⢀⠁⢀⠀⠂⡐⠄⡈⠄⠐⡀⠅⢑⢀⠂⠄⠠⠀⢄⠠⠀⠄⠠⠀⠠⠀⠁⠀⠄⠀⠀⠀⠐⠀⠐⠀⢀⠀⠄⡣⡊⢎⠢⡑
// // ⠄⠨⡀⢂⠡⡈⢂⠐⡡⠐⠌⡠⠊⡈⠢⢐⢈⠐⡁⢂⠐⠀⠔⠠⠀⡁⠂⠂⠘⡄⠈⣦⡁⡄⠠⠐⠀⠨⢄⠪⡻⣮⡻⣮⡳⣝⢮⡻⣮⡳⣝⢷⣽⠀⡇⣕⠀⡀⠀⣡⢐⢎⠎⠀⠀⠀⢀⠀⢀⠀⠀⠀⠠⠀⠌⠠⠐⡀⠁⠄⡈⠄⠅⠪⢀⠂⡁⠐⠁⠀⠀⠐⠀⠐⠀⠈⠀⠁⠀⠐⠀⠀⠀⠀⢰⢑⢌⠪⡘⢌
// // ⠐⠐⠄⠢⠐⢄⠁⠢⠐⡡⢈⠄⢊⠠⡑⠠⠂⡡⠐⡀⠅⡨⢀⠑⢀⠌⡨⠀⠡⠐⠀⢣⣻⣮⢂⠠⠁⠂⠈⠢⢇⡻⣞⡵⣫⢞⢷⣝⢮⡻⣮⡳⡇⢜⠔⣌⠂⠀⡜⢔⢕⠁⠀⡀⠀⠀⠀⠠⢀⠌⢈⠐⠀⢂⠐⢁⠐⢀⠁⢂⠐⠀⢪⢀⠊⠀⡀⠡⠀⠀⠂⠀⠀⣀⡤⡤⡴⠒⠒⠴⢤⣈⡀⠀⡇⢢⠡⡃⢜⢐
// // ⢈⠂⡁⢊⠐⠄⡡⠑⡨⢀⠢⢈⠂⠔⠠⠑⡈⠄⢊⠐⡐⠔⠠⡁⠔⠐⢄⢁⠈⠢⠀⠀⠉⠉⠛⠗⢄⠂⠀⠈⢎⠻⣮⡻⣮⣫⢗⡽⣳⠝⢊⣍⠉⠆⡣⢌⢍⢪⢊⢊⠠⡔⢊⡀⠀⡈⢈⠂⠀⢀⠪⠀⡘⡐⠢⢄⠂⠁⠐⡀⠈⡐⠐⠀⠄⢀⠐⢈⠀⢀⡤⢖⢝⡕⠎⡚⡈⢀⠁⠠⠀⠈⠙⠄⡣⢑⠌⡢⠑⠔
// // ⠀⢌⠠⢁⠌⢂⠐⡈⠔⠠⡁⢂⠡⠊⡐⠁⠔⠈⢄⠡⠐⡈⠔⠠⢈⠂⡐⠄⡀⠅⢊⠀⠀⠀⠀⠀⠘⣝⢦⡀⢀⠳⣝⢾⢮⣞⢽⣊⡵⡺⠏⡛⢛⠣⡢⡑⡅⡣⢢⠱⡡⢔⠌⠀⠀⠠⠀⢀⠀⡊⠄⠐⢄⠡⡑⠔⡀⡙⡐⠢⠢⡠⠁⢈⠀⢀⠐⣠⢖⢭⠪⢃⠡⡢⢊⠜⡔⠀⠌⢀⠅⡈⢀⠱⢈⢆⠱⡈⡊⢜
// // ⠂⠢⠐⡁⠐⠄⡡⠐⡈⠄⢌⢀⠊⠄⡨⠐⢁⠌⠠⠂⡡⠐⡈⠐⠄⢂⠐⠠⠂⡐⠄⠂⠀⠄⠀⠀⠀⢻⣆⠙⠦⣭⢞⣗⢷⡹⣧⢻⢮⣔⡱⡨⡊⡪⢢⠱⡌⣊⢔⢕⠜⠀⠀⠀⠐⠀⢂⠀⡐⢈⠄⡑⠐⢄⠊⡐⢄⠨⡈⡊⠢⠈⡐⠠⠀⣠⢞⢔⠇⡡⡊⡢⢃⠪⡂⡣⢪⠀⠂⠄⡐⠀⢂⠈⡆⢱⢈⠆⡱⢠
// // ⠈⡂⢅⠨⡈⢂⠐⡐⠄⠢⢀⠂⠌⠐⡠⠈⠄⢂⠑⠐⠄⢊⠠⠁⠌⠠⠁⠌⡐⠠⢈⠂⠠⠀⠅⠀⠀⠈⣿⢧⡀⠈⠫⢿⡵⣻⢮⡻⣵⢝⣿⠠⡑⢕⢡⠣⡪⢔⠥⠁⠀⠀⠄⠈⠀⢄⠅⢀⠌⡐⠄⡊⡈⠢⡈⠔⢄⠑⡈⢀⠂⠐⢀⠐⡴⡱⠕⡡⢊⠔⡱⡈⢎⠜⡨⠢⡣⠄⡁⠐⡀⠡⡀⠀⢸⠀⢇⠜⡠⢣
// // ⡄⠂⠔⠠⠂⢄⠡⠐⡈⠐⠄⠨⡀⠅⡐⠈⠢⢀⠅⢑⠈⢄⠂⡁⢊⢀⠑⡀⠂⠢⢀⠅⠀⡐⠡⠈⠀⠀⢹⡯⣷⠠⡀⠀⠙⠳⢯⣻⢞⡷⣽⡇⢪⢊⢆⢳⠘⠂⡀⠀⠀⡠⠁⠀⡐⠢⡈⠠⠂⢌⠐⢄⢊⠐⠌⠂⡀⠂⠄⠠⢈⠀⢂⢞⢜⢊⠢⡑⢅⢣⢘⢌⠢⡱⢨⢊⢆⢣⠀⠌⢀⠂⠄⡈⠀⢇⠨⡊⢔⠡
// // ⢝⢆⠈⠀⡑⠀⢊⠄⠌⡐⢁⠂⡐⠄⠨⠈⡂⠐⠄⢂⠁⠢⡈⠐⠄⢂⠐⡀⠑⢄⠡⡈⢀⢊⠢⠈⡂⠀⠘⣯⡻⣧⢘⢄⡀⠀⠀⠈⠉⠻⠾⢇⢕⠥⠃⠁⢀⢦⠁⠀⡐⢌⠀⠠⡑⠐⢌⠐⡡⠂⠑⠠⠀⢂⠐⠠⢀⠡⢈⠀⠂⣠⢫⡪⢡⢊⢌⠪⡢⡑⢔⢡⢃⠮⢂⠕⢔⠱⠄⠂⠠⠂⡐⢀⠁⠘⡆⠨⡂⡑
// // ⠀⠹⡳⡄⠀⠌⠀⠄⠂⠐⠄⠨⢀⠌⢐⠁⡈⡐⢁⠂⡡⢁⠌⡈⠢⡁⢌⢐⠡⡂⡑⠌⢄⠕⡈⠢⡨⡀⠀⣯⣟⣽⡆⠧⠸⠄⠀⠀⠀⠀⠈⠈⠈⠀⠀⡰⣑⢮⠀⢐⠐⠔⠀⠅⡈⢈⠀⡁⠠⠀⠅⠐⠁⠄⠠⢁⠀⢂⠀⠂⣜⢕⠕⢄⠣⡢⡑⢕⠨⡊⢆⠅⡞⢠⠣⡨⡑⠒⠦⠐⠁⢂⠐⠠⢈⠀⢱⡈⠔⡈
// // ⠀⠂⠈⠺⢦⡀⠡⠀⠅⡈⢐⠀⢂⠀⢂⠈⠠⢀⢁⠈⡐⠀⠊⠄⠑⠔⠄⠅⠊⠔⠡⠃⠪⠐⠌⠢⠢⠈⠂⠘⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢈⠄⠐⡀⠂⡐⢀⠡⠈⡠⠁⠌⠐⠀⠌⠀⢄⢞⢜⠎⡘⢔⠱⡈⢎⠢⡃⡪⢢⠺⡁⡪⢢⢑⢌⠱⡑⢆⠁⠠⠂⠁⠄⢂⠀⢎⡐⢌
// // ⠀⡑⠠⠀⠑⢝⢦⡐⠀⡐⠀⠌⠀⠌⠠⠀⠅⠠⠀⡂⠠⠁⠌⠐⡀⠂⠄⡈⠐⡀⢂⢈⠀⡂⠐⡀⠠⠁⠑⠀⠠⠀⢂⡀⣠⣾⣻⣯⢑⡀⠀⠂⠀⠀⠀⠀⢀⡀⡤⢒⢄⠐⢀⠐⡀⢂⠈⠠⠀⡂⠐⡀⠂⠨⢀⠁⡐⢁⢮⢣⠃⡜⡨⢢⢑⢅⠣⡪⢨⠴⡍⡱⠨⡢⠱⡨⡂⡣⢊⠜⡄⠂⢈⠄⠡⠀⠂⡀⣑⠠
// // ⠐⠠⢀⠁⢂⠀⠘⠮⣢⡀⠈⠠⠁⡐⠁⡈⠄⢁⠂⠐⡀⠡⠐⠁⠠⠈⠄⠠⠁⠄⠄⠠⠂⠠⠁⠠⠀⠁⢀⡔⢊⢙⡐⢡⣟⢾⣎⢫⣷⡐⠄⢆⢆⢒⢒⢆⡷⣻⡇⡱⣑⠐⡲⢤⠀⠂⡈⠐⡀⢂⠈⠠⠈⡐⠠⠈⣠⢫⡪⢁⢎⠔⡡⢃⠆⢕⡡⣎⠓⡡⠢⡊⢎⠸⡨⠢⡱⢨⢊⢌⠪⡄⠂⠐⠠⠊⡨⠀⠌⠳
// // ⠀⠂⠄⠡⠀⠌⢀⠄⠈⠺⢦⡁⠐⢀⠐⠀⢳⡀⠈⠄⠐⡀⠡⠈⡠⠁⡐⠁⡐⢀⠊⢀⠂⠁⢐⣤⡾⢛⡵⡾⢛⢉⢀⡿⣽⡘⣯⢦⠻⣷⡩⡀⢇⠱⣡⠟⢸⡿⢐⠌⢦⡁⡐⢌⠃⠠⠀⡡⠀⠄⢁⠂⢁⠄⠊⡰⡕⠵⢁⢎⠇⡜⠨⣊⠴⠍⡊⢔⢌⠪⡘⢌⠢⡃⢎⠪⡢⡑⡌⡢⡱⢨⡄⠡⠑⠈⠀⠀⠄⠐
// // ⠡⠈⠄⠡⢈⠐⡀⢐⠀⠂⠈⠙⢗⣄⡀⠁⠀⢟⣄⠠⠁⠐⡀⠡⠀⠂⠄⡈⠄⡀⠂⠄⡀⢱⣟⢷⡽⡏⣋⣴⠕⢡⡇⡟⣾⣇⠸⣯⢧⢹⡿⣔⠨⣲⠏⢂⣿⠇⡪⢊⢆⠂⡅⢪⠉⢧⠀⡀⢂⠈⠄⢄⠁⠀⣜⢕⡝⢡⠪⣣⠬⠲⡙⡨⡐⠕⠱⡨⢢⠱⡨⡊⢜⠌⢆⠕⡌⢢⢊⢒⢔⢇⠗⠈⠀⢀⠁⠐⠀⠄
// // ⡅⠨⢀⠡⠀⡂⠐⠠⠈⠄⡁⠐⠀⠑⢝⢦⣀⠘⡬⡳⣄⡁⠠⠐⠁⡈⠄⠐⠠⢀⠡⠐⠀⠀⣿⠽⣡⡾⢋⡐⠌⣼⠇⡇⢻⢾⣆⠘⣯⢧⠘⣿⡆⢋⠌⣾⠏⡰⢡⠣⡪⢘⢌⠰⡱⡨⢢⡀⠄⡐⠁⠀⠀⠈⠁⠑⠐⠂⠒⠔⡪⢫⠲⣌⢌⡙⡢⢢⡀⡁⠘⠨⠢⡣⡱⢨⠊⠦⡡⣎⠳⠁⡠⠡⡀⢀⠀⡁⠠⠀
// // ⡌⠢⡀⢂⠐⡈⠠⠁⠌⠠⡀⠡⠁⢂⠀⠈⠪⢳⢘⢖⠈⠚⢦⠐⢀⠐⡀⢁⠂⠄⠂⠐⣀⠨⠟⣚⣵⠞⡉⢔⡺⣿⢀⢮⡈⢷⡻⣦⡈⢿⡆⢹⡇⢌⡼⢃⠜⢔⢅⢣⠊⡔⡱⢈⢆⠳⠐⡁⠐⠀⠈⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠈⠪⠪⣆⢕⢌⠪⡢⢔⠀⢀⠈⠂⠙⢔⠧⠃⠠⢂⠐⡐⢄⠀⡀⠠⠀⠀
// // ⡕⡑⣌⠀⠠⠐⠀⠅⡈⠄⠐⠠⢁⠀⠀⠔⢀⠀⠁⢝⢥⠀⠀⠙⠦⣠⠐⢀⠐⠀⠌⣰⣫⣷⡻⠟⡨⢂⢁⡾⣽⡏⢸⡄⣿⣪⠻⣮⡻⣦⡻⡀⠁⢪⠢⡑⢕⠱⡨⠢⡱⡨⡊⡰⠁⡁⠂⠀⠠⠀⠂⠀⠂⠀⠁⠀⠐⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⡕⣜⢄⠫⠢⡄⢁⠢⠐⠀⠈⠠⠡⡈⠔⠠⠡⡀⠀⠂⠀
// // ⡎⢢⢊⠪⡢⣀⠁⠐⠠⠈⢄⠁⠀⠀⠌⡐⠠⠈⠀⠈⡗⣇⠠⠀⡀⠈⠑⠦⣈⠀⠞⡩⢔⠔⡌⢆⠪⠰⣝⣟⢾⡃⢜⡇⢺⣝⣟⣮⣻⠞⡱⢄⠢⡣⡑⢕⢑⠕⡱⠱⡌⠎⠠⠐⠄⠀⠠⠀⠠⠀⠀⠂⠠⠀⠁⠀⠁⢀⠀⠀⠁⠀⠁⢀⠀⡀⠀⠀⠀⠀⠐⠱⡩⢊⡴⡫⠂⡀⠀⠄⢀⠀⢀⠈⠂⢑⠐⡀⠁⠀
// // ⡕⡡⢊⠆⢕⢄⠣⢢⢀⠀⠂⠀⡀⡑⠀⠂⠀⠀⠀⠀⠘⡮⡆⢀⠐⡀⢂⠀⡀⢁⠂⠠⠈⠊⠪⠌⡃⢹⣯⣞⣿⠠⡊⣧⠘⣷⢽⠎⡡⡊⡔⡱⠨⡢⡱⡡⡣⡱⢉⠊⡠⠈⠂⠀⢀⠀⠄⠠⠀⠐⠀⠄⠀⠄⠈⠀⠂⠀⠀⠁⠈⠀⠂⠀⠀⢀⠀⠐⠀⠀⠀⠀⠀⠙⠃⠰⡠⢈⠌⢂⠄⡀⠀⠄⠠⠀⠈⠐⢈⠀
// // ⢎⠰⡡⢊⠆⡅⢕⠡⡊⡑⠦⠀⠄⠈⠀⡀⠈⠀⠁⠀⠀⠸⡪⡆⠀⡐⢀⠂⠄⠂⠄⡁⢂⠈⡀⠠⠈⠈⠑⠯⠻⣧⡘⠼⡈⠽⡡⡊⠦⡱⢌⢎⢸⡐⢕⠜⢀⠅⡐⠄⠀⢀⠀⠄⠀⡀⠀⠀⠄⠐⠀⠀⠄⠀⠐⠀⡀⠈⠀⠐⠀⠐⠀⢀⠁⡀⠄⡐⢀⠂⠀⠄⠀⠀⠀⠀⠨⠂⢔⠁⡐⠌⡐⢀⠄⠀⡁⠠⠀⠀
// // ⡣⠑⠌⠂⠑⠈⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠂⠠⠀⠀⠀⢫⢺⡀⠠⠀⠂⠌⠐⢄⠐⢀⠂⡐⠀⠢⢀⠄⠀⠀⠀⠀⠌⢈⠑⡈⠊⠊⠲⠑⠎⢂⠡⡀⠢⠐⠀⠀⠀⢀⠀⢀⠀⠄⠀⠈⠀⠀⠄⠐⠀⠀⠂⠠⢀⠀⠄⢂⠐⡈⠄⡁⢂⠐⡀⢂⠐⠠⠈⠄⠀⠀⠂⠐⠀⠀⠈⠠⠑⠰⡈⢄⢁⠂⠢⡀⠀⠂⠀
// // ⠐⠔⠤⡡⠌⠤⡡⡈⢔⢀⠢⢀⠡⠀⠄⡁⢀⠂⢀⠀⡀⠀⠀⢣⡫⡄⠈⡐⠈⡐⢀⠁⠱⡠⡀⢑⠀⡂⢈⠐⠂⠤⡀⡀⠀⠀⠀⠁⠈⠀⠑⠐⠀⠀⡀⠀⠀⡀⠀⠂⠀⡀⠀⢀⠀⠐⠀⠁⢀⠀⠄⡐⠐⠠⠁⢄⠈⡐⢀⠂⡐⠠⠐⡀⢂⠐⠠⠈⠄⠡⠈⠄⠁⠀⠄⠀⠁⡀⠀⠈⠐⢈⠢⢄⠑⡈⢄⠑⠄⡂
// // ⡀⢂⠈⠢⢈⠂⠐⡁⠊⠔⠡⠑⢔⠑⡔⢄⠆⡰⡀⡢⡈⡐⠀⠀⠱⡳⡄⠐⠀⠂⠄⡁⢐⠀⡈⠢⡡⡈⢢⡐⠅⡠⡀⡈⡀⠃⠤⠠⣀⡀⢀⠀⠀⠀⠀⠠⠀⠀⠀⠂⠀⠀⡀⢀⠠⠐⡀⢁⠂⡈⢄⢠⠡⡨⡐⠄⠢⠒⠐⠂⡈⠄⡁⠡⠀⠌⠠⠁⠈⠀⠁⠀⠐⠀⡀⠈⠀⠀⠠⠀⡀⠀⠂⠌⠑⢆⠔⡈⡐⢈
// // ⠠⠀⢂⠁⠠⠁⢊⠀⠌⢀⠂⠡⠀⢂⠠⢀⠐⠠⠀⠄⠄⠨⡀⠀⠀⠹⡪⣄⠁⠨⠀⡂⠐⠄⠐⠠⠀⠌⠢⡈⡙⠲⢦⢌⡈⠌⡂⢂⠠⠄⠡⠁⠓⠐⠡⠤⠠⡐⠠⠔⢄⠆⢔⠄⡢⠒⡐⡁⡊⢠⢁⠐⠄⠠⠐⡀⠡⠀⡁⠂⠐⠀⠀⠁⠀⠂⠀⠀⢈⠠⠀⠈⢀⠀⢀⠀⠁⠠⠀⡀⠀⡀⠀⠈⠂⠌⠊⢦⢈⠄
// // ⠁⠌⠠⠈⡠⠁⠄⢂⠈⠄⠠⡁⢈⠄⠐⠠⠈⡠⠁⢂⠨⠀⠄⠀⡀⠀⠑⣝⢆⠐⠠⠀⠅⠐⡁⠐⡀⡀⠀⠀⠈⠂⠢⡁⠛⠒⠤⢀⠡⠈⠁⠑⠘⠐⠂⠢⠢⠠⠢⠐⢄⠔⡠⣈⢀⡁⣈⢀⡀⡀⠀⣈⠀⡀⠄⡀⠀⣀⣀⡀⢀⣀⣀⡄⠠⢀⠄⠡⢀⢀⠀⡠⠀⡀⢀⠀⠐⠀⢀⠀⢀⠀⠄⠀⠄⠈⠢⢈⠢⡣
// // ⠀⠌⠐⠄⢐⠀⠊⠠⢀⠑⠀⠔⠀⠄⠡⠈⠄⢐⠀⠁⢀⢠⠐⠔⠁⡈⢀⠈⠷⣥⠀⠌⠠⠁⢄⠈⠄⠠⠁⢂⢀⠀⠀⠈⠈⠢⢄⡀⠂⠁⠢⠠⡀⡀⠀⡀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⢀⠀⡈⠘⠊⠉⠀⠈⠄⠨⠀⠀⠉⠉⠋⠊⠈⠀⠐⠠⠀⠁⠂⠀⠂⠀⢀⠈⠀⠈⠀⠄⠀⡀⠀⠀⡀⠀⠀⠀⢀⠐⠠⡘
// // ⠠⢈⠐⡀⢁⠌⠠⠁⢄⠈⢂⠨⢀⠁⢂⠁⠢⠀⡄⢕⠨⠂⠐⠄⠨⠀⠀⠀⠈⠪⡳⡄⠂⠁⠄⠠⠁⠂⠡⢀⠂⡈⠐⠠⡀⢀⠀⠈⠈⠒⠄⣁⠐⠈⠂⠢⠂⢅⠰⠠⡀⢂⠄⢄⠢⠂⠢⠁⠈⠀⠀⠀⠠⠀⢀⠀⠠⠀⠀⠀⠀⠀⠀⠀⢀⠀⡀⠄⠠⠀⠠⡀⠠⠀⠄⠂⠐⠀⠀⠀⠠⢀⠄⠔⡁⠑⠄⠑⠀⠈
// // ⠅⢐⠀⠢⠀⡂⢈⠐⠠⡀⠡⠀⢂⠈⡀⢄⢆⠱⠈⢂⠀⢊⠀⠊⠀⠐⠀⡀⠀⠀⠙⡺⢦⡈⠀⠡⢈⠈⡐⢀⠂⡈⠄⢁⠄⠠⠂⠐⠄⠠⢀⠀⡈⠐⠂⠄⢁⠀⠊⠐⠈⠐⠐⠐⠀⠁⠀⠀⠀⡀⠀⠁⢀⠀⡀⡀⠠⢀⠄⡁⢐⠀⡊⢀⠡⠀⠔⢀⠂⠁⠂⠀⠐⠀⠀⠀⢀⣠⣀⣣⠨⠂⠈⠀⠠⠀⠄⠀⠂⠀
// // ⡁⢂⠈⡐⢀⠢⢀⠁⠂⢄⠈⠂⡠⠢⠑⠔⠁⠄⠡⢀⠌⢀⠀⠂⠐⠀⠄⠀⡀⠀⠀⠈⢪⢳⣌⠀⠂⠐⡀⢂⠐⠠⠈⠄⠐⠠⠁⠌⠠⠁⠄⠂⡐⢀⠂⡐⠀⠂⠄⠠⢀⢀⠀⡠⠀⠄⡐⠐⡀⠂⠌⠠⢁⠐⠠⠀⠅⠠⠐⡀⢂⠐⡀⠂⠀⢁⠀⡀⢀⠄⠠⠂⠐⣀⡥⡺⡹⠂⠃⠀⠀⠀⡀⢁⠀⠐⠀⡈⠀⠂
// // ⡕⠀⠔⠀⠂⠄⢂⠈⡐⢀⠔⠑⡈⡐⢁⠈⡐⢈⠐⠀⡀⠀⡀⠐⠀⠄⠠⠀⢀⠀⡠⠀⠄⠑⢎⡳⣌⠀⠐⠀⠌⠠⠁⠌⠠⠁⠂⠂⢂⠂⠂⠂⠄⠠⠂⠠⠁⠌⡀⠡⠀⡂⠐⡀⢂⠐⠄⢈⠄⢈⠄⠡⠀⠌⠠⢁⠈⠂⠐⢀⠀⠄⠠⠀⠅⢐⠀⠔⠀⣐⡠⣖⢫⠮⠊⠁⠀⠀⠀⡀⠐⠀⡀⠠⠀⠁⠠⠀⢈⠀
// // ⡊⠠⠈⠄⠑⠀⠄⡢⠐⡁⠌⠐⠀⠄⢂⠐⡀⠂⠀⠂⠀⡀⠠⠀⠄⢀⠀⠄⠠⠂⠄⠨⠀⠀⠀⠱⡪⡳⣌⠀⠊⡀⠡⠈⠄⠡⠈⠂⢄⠈⠌⡀⠑⡀⠅⡈⠐⠄⠄⡁⠂⠄⡁⢐⠀⠂⠌⡀⠐⡀⠔⢀⢁⠈⠠⠀⠄⠡⠈⠄⠠⠁⠂⢁⠂⣀⡢⡔⡯⡪⠚⠈⠀⠀⠀⠀⠀⠀⠂⠄⠐⢄⠀⠄⢀⠁⠐⠀⡀⠀
// // ⠂⠄⡁⢐⢁⠜⠈⢄⠈⠄⡐⠈⠄⡁⠐⠄⠀⠐⠀⠂⢀⠀⡀⢀⠀⡀⢄⠈⠂⠌⠀⠂⠀⠄⠀⠀⠈⠪⡪⡳⣤⡐⠀⠡⠈⠄⠡⠈⡀⢂⠐⡈⠠⠐⠠⢈⠐⠐⠄⠠⠁⡂⠐⡀⠡⠈⠄⠐⡈⢀⠐⠠⠀⡡⠈⠄⠑⡀⠡⠈⡀⢁⡨⡔⡮⡱⠙⠈⠀⠀⠀⢀⠀⡀⠠⠀⠌⠠⠀⠔⠀⠄⡈⢈⠀⡑⠈⠢⠐⢄
// // ⢀⠂⡰⠈⠂⠠⠁⠠⡐⠈⠠⠈⠄⡈⠀⠄⠈⠀⠐⠀⢀⠀⠀⠠⠐⠠⠠⠈⠂⠀⠐⠀⠄⠠⠀⠀⠀⠀⠀⠑⢎⠞⠦⠁⠐⠐⠠⠁⡐⠀⠔⠄⠠⠁⠂⠄⡈⠐⡈⠐⠄⠄⠡⠀⠌⠐⡈⢀⠂⠄⠁⠌⠠⠐⠀⠊⠠⢀⡢⠴⡪⡝⠜⠊⠀⠀⠠⠐⠀⠌⠐⢀⠂⠄⡈⠐⡈⠠⠁⠄⡁⠂⠠⠂⠐⡀⢁⠐⠁⠄

// #include <bits/stdc++.h>
// using namespace std;
// #define gc getchar_unlocked
// #define fo(i, n) for (i = 0; i < n; i++)
// #define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
// #define ll long long
// #define deb(x) cout << #x << "=" << x << endl
// #define pb push_back
// #define mp make_pair
// #define F first
// #define S second
// #define all(x) x.begin(), x.end()
// #define clr(x) memset(x, false, sizeof(x))
// #define sortall(x) sort(all(x))
// #define tr(it, a) for (auto it = a.begin(); it != a.end(); it++)
// #define PI 3.1415926535897932384626
// #define mod 1000000007
// typedef pair<int, int> pii;
// typedef pair<ll, ll> pl;
// typedef vector<int> vi;
// typedef vector<ll> vl;
// typedef vector<pii> vpii;
// typedef vector<pl> vpl;
// typedef vector<vi> vvi;
// typedef vector<vl> vvl;
// int typing_time(string &s) {
//     int time = 2; 
//     for (int i = 1; i < s.length(); i++) {
//         if (s[i] == s[i - 1]) {
//             time += 1; 
//         } 
//         else {
//             time += 2; 
//         }
//     }
//     return time;
// }
// int main(){
//     int t;
//     cin>>t;
//     vector<string> results;
//     while(t--){
//         string s;
//         cin>>s;

//         int maxtime=INT_MIN;
//         string ans="";
//         string help="abcdefghijklmnopqrstuvwxyz";

//         for (int i = 0; i <= s.length(); i++) {
//             for (auto ch : help) {
//                 string new_s = s.substr(0, i) + ch + s.substr(i);
//                 int current_time = typing_time(new_s);
//                 if (current_time > maxtime) {
//                     maxtime = current_time;
//                     ans = new_s;
//                 }
//             }
//         }

//         results.push_back(ans);
//     }
//     for (auto result : results) {
//         cout << result << endl;
//     }
// }
   
// }

// #include <iostream>
// #include <string>
// #include <algorithm>

// using namespace std;

// // Function to calculate typing time of a string
// int typing_time(const string &s) {
//     int time = 2; // Time for the first character
//     for (size_t i = 1; i < s.length(); ++i) {
//         if (s[i] == s[i - 1]) {
//             time += 1; // Same as previous character
//         } else {
//             time += 2; // Different from previous character
//         }
//     }
//     return time;
// }

// int main() {
//     string s;
//     cin >> s;

//     int max_time = 0;
//     string best_insertion = "";
//     string alphabet = "abcdefghijklmnopqrstuvwxyz";

//     for (size_t i = 0; i <= s.length(); ++i) {
//         for (char ch : alphabet) {
//             string new_s = s.substr(0, i) + ch + s.substr(i);
//             int current_time = typing_time(new_s);
//             if (current_time > max_time) {
//                 max_time = current_time;
//                 best_insertion = new_s;
//             }
//         }
//     }

//     cout <<  best_insertion << ", Max typing time: " << max_time << endl;

//     return 0;
// }



// #include <iostream>
// #include <string>
// #include <vector>
// #include <algorithm>

// using namespace std;

// // Function to calculate typing time of a string
// int typing_time(const string &s) {
//     int time = 2; // Time for the first character
//     for (size_t i = 1; i < s.length(); ++i) {
//         if (s[i] == s[i - 1]) {
//             time += 1; // Same as previous character
//         } else {
//             time += 2; // Different from previous character
//         }
//     }
//     return time;
// }

// int main() {
//     int t;
//     cin >> t;
//     vector<string> results;

//     while (t--) {
//         string s;
//         cin >> s;

//         int max_time = 0;
//         string best_insertion = "";
//         string alphabet = "abcdefghijklmnopqrstuvwxyz";

//         for (size_t i = 0; i <= s.length(); ++i) {
//             for (char ch : alphabet) {
//                 string new_s = s.substr(0, i) + ch + s.substr(i);
//                 int current_time = typing_time(new_s);
//                 if (current_time > max_time) {
//                     max_time = current_time;
//                     best_insertion = new_s;
//                 }
//             }
//         }

//         results.push_back(best_insertion);
//     }

//     for (const string &result : results) {
//         cout << result << endl;
//     }

//     return 0;
// }


#include <iostream>
#include <string>
using namespace std;

int main() {
    int t;
    cin >> t;

    while (t--) {
        string s;
        cin >> s;

        int m = 0;
        string bt = "";
        string alphabet = "abcdefghijklmnopqrstuvwxyz";

        for (size_t i = 0; i <= s.length(); ++i) {
            for (char ch : alphabet) {
                string ns;
                ns.reserve(s.length() + 1);

                for (size_t j = 0; j < s.length(); ++j) {
                    if (j == i) {
                        ns += ch;
                    }
                    ns += s[j];
                }
                if (i == s.length()) {
                    ns += ch;
                }

                int time = 2;
                for (size_t j = 1; j < ns.length(); ++j) {
                    if (ns[j] == ns[j - 1]) {
                        time += 1;
                    } else {
                        time += 2;
                    }
                }

                if (time > m) {
                    m = time;
                    bt = ns;
                }
            }
        }

        cout << bt << endl;
    }

    return 0;
}

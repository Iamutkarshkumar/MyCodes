// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡀⢀⠀⡀⠀⡀⠀⡀⠀⡀⠀⠀⠀⠀⠀⢀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⢀⢀⢀⠠⡀⠄⠤⡠⠤⡠
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠄⡐⢀⠂⡐⠌⡠⢑⠈⠔⡠⢁⠅⡡⠁⢅⠁⢅⠠⢁⠊⢄⠑⡈⡐⢁⠑⠠⠂⢄⠁⡂⠈⠢⢈⠔⢈⠐⡈⢌⠈⢌⠨⠈⠄⠊⠄⢌⠈⢌⠈⡂⠡⡈⠂⠌⡐⢀⠂⡐⢀⠂⡐⢀⠂⢂⠐⡁⠨⡀⢑⠈⡐⠄⠢⠠⡁⠢⡈⠌⠢⢂⠕⡨
// ⢀⠄⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠡⠈⠂⢂⠐⠄⢌⠰⡈⢔⢁⢑⠡⢂⠂⢂⠐⡐⠄⠌⠠⠂⢄⠡⠂⡐⠄⡈⠄⠡⠁⡊⢀⠢⢈⠈⠂⠄⢂⠡⠈⠔⠠⡈⠄⢂⠁⡊⠠⡁⠂⠔⠠⠂⠌⡐⢀⠑⡀⠢⠀⢅⠐⡀⢂⠐⠠⠈⠄⠐⡀⢂⠐⠠⠈⢄⠈⡂⠢⠈⠔⠠⠑⡁⠢⠐⡐
// ⢀⠂⡐⠠⢁⠐⠀⢂⠐⠀⠄⡀⢀⠀⡀⢀⠀⠠⠀⠄⢁⠈⡐⠀⡡⠈⠄⠠⠁⠢⢈⠢⢂⠡⠂⠡⡀⢊⠀⢌⠠⠂⡡⠑⡈⠄⢂⠡⢀⠢⠈⡠⠑⡈⠄⢂⠢⠠⠡⡀⢀⠀⠀⡁⠈⠂⠔⢈⠄⠂⠌⠠⠠⡁⠌⡠⠑⠠⠂⢄⠡⢀⠅⠨⢀⠂⡐⠠⠈⡐⠠⠈⠄⠐⠀⠌⡀⠡⠐⡀⢂⠡⢈⠂⠡⡈⠄⡑⡈⡐
// ⠀⠢⠀⠅⠠⠈⠄⡁⠠⠁⡐⠀⠄⠠⠀⠄⠠⠁⠐⠀⠂⠠⠐⠠⠀⠂⠨⢀⠑⠠⢁⠐⠄⢁⠌⢐⠂⢀⠂⠢⠐⡁⠐⠄⠢⡈⠠⠂⢂⠐⡐⠄⠢⠐⣈⠤⡢⠃⠀⠠⠀⡀⠂⢀⠈⠀⠐⠠⠐⠁⠌⢂⢁⠐⡀⠢⠈⢄⠁⡂⠐⢄⠈⡂⠐⠄⠐⡀⠂⠄⠐⠀⠌⠀⠑⣦⣀⠐⠀⢂⠐⡀⢂⠁⡂⠐⡐⠠⠂⠨
// ⡈⠄⠁⠌⡀⠡⠐⠀⢂⠐⢀⠈⡀⠂⡁⠐⠠⢈⠀⠡⠈⠐⠀⢂⠈⠠⠁⢄⠈⡐⠀⡡⠈⠄⢂⠃⢀⠂⡁⢊⠄⢌⠈⠔⢁⢀⠊⠠⡁⠌⡠⡌⠒⠉⡠⠊⠀⠀⠐⠀⠄⢀⠐⠀⡀⠁⠐⠀⡀⠁⠌⡀⠢⢈⠀⡂⠡⢀⠂⠌⢐⠀⠂⠌⠐⠈⠄⠐⠀⠂⢁⠈⠠⠈⠀⢣⢎⢻⢢⣄⠀⠔⠀⢂⠈⡀⠂⠌⠠⠁
// ⠄⡈⢐⠀⠂⠄⡁⠈⠄⠐⡀⠐⠀⢂⠀⡁⠐⡀⠈⠄⠈⠄⠁⠄⠠⠁⠂⠠⠂⠠⠡⡀⡑⢈⡌⠀⠄⠌⢐⠂⡐⠄⠌⡐⠀⡂⡈⢂⡔⠝⠀⢀⠈⠊⠀⠀⠀⡀⠂⠐⠀⠄⠀⠂⢀⠈⠀⠂⢀⠐⠀⠀⠂⠐⠄⡐⠁⠄⠂⠡⢀⠁⡡⠈⡈⠂⡈⢀⠡⠈⡀⠀⠂⠐⠀⢹⡪⠀⠑⠪⡳⣄⠈⠠⠀⠌⢀⠁⢂⠁
// ⠀⠔⠀⠌⠐⠠⢀⠁⠂⡐⠀⡁⢈⠠⠀⡐⠠⠀⠡⠀⠡⠀⠡⠀⠡⢀⠁⢂⠌⢂⠡⠠⡈⡰⠀⢀⠊⢀⠇⠐⠄⠊⠠⢈⠐⢄⡜⠁⠀⠄⢂⠠⠂⠁⢄⢀⠀⠀⠐⠀⠀⠄⠈⠀⠀⠀⡁⠠⠀⠤⠀⠁⠈⠐⠠⠐⠁⠌⠠⡁⠐⠠⠐⡀⠐⡀⠐⠀⠄⠂⡀⢈⠀⡁⠀⢸⢎⠀⡀⢀⠀⠙⢵⡀⠐⠀⢂⠐⠀⠌
// ⠌⢀⠂⡈⢀⠁⠄⢈⠀⡐⠠⠀⠂⡀⠂⡀⠂⡈⢀⠁⡐⠁⠄⢁⠂⠄⠠⡁⠢⡀⠑⠄⡠⠃⠀⠠⠈⡌⠠⠑⠠⡁⡁⢂⡜⠁⠀⡠⠑⠠⠃⢀⠀⠁⠄⠠⢁⠁⠂⠢⢄⡀⠀⠈⠀⠐⠠⠁⢈⠂⠀⠈⠀⡁⢀⠈⡐⢁⠂⢄⠁⠊⠠⢀⠁⠠⠁⡈⢀⠂⠠⠀⠄⠠⠀⢸⢳⠀⢀⠂⡐⠠⠀⠳⡄⠁⠠⠈⠐⡀
// ⡐⠀⠄⠐⠀⠂⡐⠠⠀⠄⠠⠈⠠⠀⠂⢀⠂⠠⠀⠄⡀⠂⠐⡀⠐⠠⡁⠔⢐⠌⡈⠂⡸⠀⠀⠈⢠⠃⠨⡀⢁⠄⡬⠃⠀⢄⠡⠀⠔⠁⡀⠂⠀⠂⢀⠂⠄⠈⠈⠀⠂⠨⠄⠀⠁⠐⢀⠀⠂⠄⠀⠐⠀⠄⠀⠠⠀⠐⡀⠂⠌⡈⢐⠀⠌⢀⠂⠠⢀⠐⢀⠂⠐⠀⠄⢸⡣⠀⠄⠂⠠⠂⡐⠀⠘⡄⠀⡁⠐⠀
// ⠐⠠⢈⠀⡁⠂⠠⠐⠀⠂⠠⠁⠐⠈⠀⠂⢀⠂⠁⠄⡀⠁⠂⠠⠁⠢⠐⡈⢐⠆⢈⠄⡹⠀⠀⠀⡎⠠⠁⠠⢂⠎⠀⠠⡈⢀⠄⠊⡀⢄⠈⠀⠈⡀⠢⠀⠀⠂⢀⠈⠀⠡⠈⡂⠠⠀⠠⠀⠈⡂⠐⠀⠄⢀⠁⠐⠀⠄⢈⠐⠄⢂⠐⡀⠂⠄⠠⠁⠠⠐⠀⠄⢁⠐⠀⢸⡕⠀⢂⠁⡂⢐⠀⡁⢂⠀⠀⠄⠈⠠
// ⢀⠁⠠⠀⠄⢈⠠⠀⡁⢈⠀⠌⠀⡁⢈⠀⠂⢀⠁⠄⢀⠁⠌⠠⠁⡈⢂⠐⢈⠇⠠⠀⡳⠀⠀⢀⠇⠠⠁⡜⠁⠀⡨⢀⠖⠁⠀⠖⠀⠄⠀⢈⠀⠔⠀⡠⠃⠀⢀⠂⠁⠀⠂⡐⠐⠠⠀⠐⠀⠈⠐⠀⡀⢀⠀⡁⠀⠂⠠⡑⢀⠂⡐⢀⠡⠈⡠⠈⡀⠂⢁⠐⠀⠄⠂⢸⠎⠀⠄⢂⠐⡀⢂⠐⠀⢁⠐⠀⠁⡐
// ⠠⢀⠁⡐⠀⠂⠀⠄⠠⢀⠀⠂⠐⠀⠄⢀⠁⠠⠀⠂⡀⠂⠄⡁⠂⢈⠄⠨⠀⡯⢀⠁⢱⠀⠀⢰⠁⢀⠊⡠⠂⢐⠔⠕⠁⡔⡅⠀⢂⠐⡀⠂⠄⠀⠀⠀⠀⡀⢀⠀⠈⠀⠂⠀⠁⠊⠀⡁⠀⠐⠀⠠⠀⠀⢀⠀⡈⠀⠀⡊⠄⢂⠐⠀⠔⠀⠄⠐⠀⠌⠀⠄⢁⠠⠀⣏⡃⠀⢂⠐⡀⠂⠀⠀⠀⢐⠀⠐⠀⠄
// ⢀⠂⠄⠠⠈⡀⢁⠐⠠⠀⠄⢁⠈⡀⠂⠠⠀⡁⠐⠠⠀⠌⠠⢀⠅⠀⠢⡈⢀⠳⣁⠂⠨⡀⠀⠨⠀⢂⡜⠀⡰⠡⠁⢀⠙⠨⠂⢀⠖⡤⠀⠂⡀⣈⡠⠁⠐⢈⠐⠄⣂⠀⠐⠀⠐⠀⢀⠀⢀⠁⠀⠄⠀⠂⠀⠀⡀⠈⠀⠨⠂⠄⠡⠈⠄⡈⠄⠁⠌⠠⠈⠠⠀⠄⢀⢷⠀⡈⢀⠂⠀⠄⠈⠀⠂⠠⠁⠀⠂⠈
// ⠡⠀⢊⠐⡀⢂⠠⠂⠐⡀⠂⠄⠠⠀⠌⠐⠠⢀⠁⡂⠡⠈⡂⠐⠄⠈⢢⠀⢂⠱⠨⡐⠀⠇⠀⠀⢌⠮⠀⠜⢈⠰⡩⢣⢢⡁⠄⡤⣈⠈⠀⢸⢐⠥⡍⠀⠀⠀⠂⠐⠀⠌⠠⡁⢬⢀⠀⠀⢀⠀⠄⠀⠐⠀⠈⠀⠀⠈⠀⠈⡊⠄⡁⠂⡐⠀⠌⠐⡀⠁⠌⠐⡀⠂⢸⡃⠠⠐⠀⠀⠠⠀⠀⠂⠀⠨⠀⠠⠈⠀
// ⠅⠨⢀⠂⡐⠄⢂⠁⠢⠀⠌⠠⡁⠌⠂⡑⠐⡀⠢⢀⠑⠄⢌⢈⠂⠠⢘⠠⠀⡈⡂⢥⠀⢘⠀⢠⠃⠃⣐⠂⢀⡀⠀⣤⣄⠀⢘⠰⠌⡨⢀⡅⡠⡃⠀⠀⢀⠅⠀⢤⠈⠄⠊⠠⡀⢁⠢⢁⡀⠀⠀⡀⠁⠠⠀⠁⡀⠈⠀⡀⠈⠔⠠⠈⢄⢈⠐⠄⠠⠁⠌⠠⠐⠀⣯⠂⠀⢀⠀⠂⠀⠐⠀⡀⠁⡈⢀⠀⠂⢀
// ⠄⠡⠐⡀⠂⠔⢀⠅⠨⡀⢑⠐⠄⢊⠐⠠⠁⢄⠁⠢⢈⠂⠔⠠⠂⠐⢨⠂⠄⠀⠱⠀⠆⠀⠀⠈⡳⣤⡹⣦⣀⣈⡥⠤⢄⠀⡨⡊⢠⢃⠰⠄⠃⠀⢀⡰⠁⠀⡈⠀⠄⠊⠀⠂⢐⠀⠔⢀⠀⠑⠄⡀⠀⠠⠀⢀⠀⠐⠀⠀⡀⠀⠁⠊⢄⠢⢈⠄⠡⢈⠄⡡⢈⡸⡊⠀⠀⠀⢀⠀⠈⢀⠀⠀⡀⠐⠀⠄⢁⠀
// ⠁⡂⠡⠀⢅⠨⢀⠂⠢⠠⡁⠌⢂⠡⠈⢄⠑⡀⡁⠑⢄⢈⢂⠁⠌⠠⠘⡄⢁⠀⠊⠆⢘⠀⢁⠀⠢⣹⣟⢮⡵⣴⣜⣔⣡⢃⡼⣆⢣⣿⡀⠃⢀⡤⢪⠂⠐⠠⠀⠁⣀⠀⠀⢀⢁⠐⡀⢂⠁⠌⠠⠈⠊⢄⢀⠀⠀⠐⠀⠄⠀⠠⠀⢀⠀⠈⠀⠢⢁⠂⠔⡠⢢⠋⠀⠀⠀⢀⠀⠀⠁⠀⠠⠀⢀⠁⡈⢂⠔⠠
// ⠐⠠⢈⠂⡐⢀⠂⢌⠐⡡⠐⠌⡐⠄⡑⢀⠢⠠⢈⠂⡐⢀⠂⡈⠐⡐⠀⠸⢀⠀⠀⠌⠠⠂⠀⠄⠂⠌⣿⣕⣟⢮⣞⢵⣝⡽⣝⣽⣘⡥⢒⣰⢟⡧⠱⣄⠁⠄⠀⢴⢩⠉⠀⡠⡫⠀⠀⠐⢀⠊⡀⢁⠂⠄⢁⠢⢈⠀⠀⠀⠄⠀⠄⠀⢀⠀⢀⠀⠀⠈⠈⠂⠢⠀⠀⢀⠀⡀⠀⠁⠐⠀⠠⠀⠠⢐⢅⠪⡐⣑
// ⢀⠁⡂⢐⠈⠄⢂⠢⢈⠔⡈⢂⠔⠐⠄⡡⠐⠄⠡⠠⡈⢀⠂⡈⠄⠂⠈⠄⢇⠀⢀⣦⠁⡈⢄⠀⠄⡈⢘⢮⡳⣯⡺⣕⢯⡺⣵⡣⣟⢮⣫⢗⣯⡇⢳⠀⡀⠄⠀⡣⠃⠀⡰⡱⠀⠀⢀⠁⢀⠀⠂⡐⠄⡈⠄⠐⡀⠅⢑⢀⠂⠄⠠⠀⢄⠠⠀⠄⠠⠀⠠⠀⠁⠀⠄⠀⠀⠀⠐⠀⠐⠀⢀⠀⠄⡣⡊⢎⠢⡑
// ⠄⠨⡀⢂⠡⡈⢂⠐⡡⠐⠌⡠⠊⡈⠢⢐⢈⠐⡁⢂⠐⠀⠔⠠⠀⡁⠂⠂⠘⡄⠈⣦⡁⡄⠠⠐⠀⠨⢄⠪⡻⣮⡻⣮⡳⣝⢮⡻⣮⡳⣝⢷⣽⠀⡇⣕⠀⡀⠀⣡⢐⢎⠎⠀⠀⠀⢀⠀⢀⠀⠀⠀⠠⠀⠌⠠⠐⡀⠁⠄⡈⠄⠅⠪⢀⠂⡁⠐⠁⠀⠀⠐⠀⠐⠀⠈⠀⠁⠀⠐⠀⠀⠀⠀⢰⢑⢌⠪⡘⢌
// ⠐⠐⠄⠢⠐⢄⠁⠢⠐⡡⢈⠄⢊⠠⡑⠠⠂⡡⠐⡀⠅⡨⢀⠑⢀⠌⡨⠀⠡⠐⠀⢣⣻⣮⢂⠠⠁⠂⠈⠢⢇⡻⣞⡵⣫⢞⢷⣝⢮⡻⣮⡳⡇⢜⠔⣌⠂⠀⡜⢔⢕⠁⠀⡀⠀⠀⠀⠠⢀⠌⢈⠐⠀⢂⠐⢁⠐⢀⠁⢂⠐⠀⢪⢀⠊⠀⡀⠡⠀⠀⠂⠀⠀⣀⡤⡤⡴⠒⠒⠴⢤⣈⡀⠀⡇⢢⠡⡃⢜⢐
// ⢈⠂⡁⢊⠐⠄⡡⠑⡨⢀⠢⢈⠂⠔⠠⠑⡈⠄⢊⠐⡐⠔⠠⡁⠔⠐⢄⢁⠈⠢⠀⠀⠉⠉⠛⠗⢄⠂⠀⠈⢎⠻⣮⡻⣮⣫⢗⡽⣳⠝⢊⣍⠉⠆⡣⢌⢍⢪⢊⢊⠠⡔⢊⡀⠀⡈⢈⠂⠀⢀⠪⠀⡘⡐⠢⢄⠂⠁⠐⡀⠈⡐⠐⠀⠄⢀⠐⢈⠀⢀⡤⢖⢝⡕⠎⡚⡈⢀⠁⠠⠀⠈⠙⠄⡣⢑⠌⡢⠑⠔
// ⠀⢌⠠⢁⠌⢂⠐⡈⠔⠠⡁⢂⠡⠊⡐⠁⠔⠈⢄⠡⠐⡈⠔⠠⢈⠂⡐⠄⡀⠅⢊⠀⠀⠀⠀⠀⠘⣝⢦⡀⢀⠳⣝⢾⢮⣞⢽⣊⡵⡺⠏⡛⢛⠣⡢⡑⡅⡣⢢⠱⡡⢔⠌⠀⠀⠠⠀⢀⠀⡊⠄⠐⢄⠡⡑⠔⡀⡙⡐⠢⠢⡠⠁⢈⠀⢀⠐⣠⢖⢭⠪⢃⠡⡢⢊⠜⡔⠀⠌⢀⠅⡈⢀⠱⢈⢆⠱⡈⡊⢜
// ⠂⠢⠐⡁⠐⠄⡡⠐⡈⠄⢌⢀⠊⠄⡨⠐⢁⠌⠠⠂⡡⠐⡈⠐⠄⢂⠐⠠⠂⡐⠄⠂⠀⠄⠀⠀⠀⢻⣆⠙⠦⣭⢞⣗⢷⡹⣧⢻⢮⣔⡱⡨⡊⡪⢢⠱⡌⣊⢔⢕⠜⠀⠀⠀⠐⠀⢂⠀⡐⢈⠄⡑⠐⢄⠊⡐⢄⠨⡈⡊⠢⠈⡐⠠⠀⣠⢞⢔⠇⡡⡊⡢⢃⠪⡂⡣⢪⠀⠂⠄⡐⠀⢂⠈⡆⢱⢈⠆⡱⢠
// ⠈⡂⢅⠨⡈⢂⠐⡐⠄⠢⢀⠂⠌⠐⡠⠈⠄⢂⠑⠐⠄⢊⠠⠁⠌⠠⠁⠌⡐⠠⢈⠂⠠⠀⠅⠀⠀⠈⣿⢧⡀⠈⠫⢿⡵⣻⢮⡻⣵⢝⣿⠠⡑⢕⢡⠣⡪⢔⠥⠁⠀⠀⠄⠈⠀⢄⠅⢀⠌⡐⠄⡊⡈⠢⡈⠔⢄⠑⡈⢀⠂⠐⢀⠐⡴⡱⠕⡡⢊⠔⡱⡈⢎⠜⡨⠢⡣⠄⡁⠐⡀⠡⡀⠀⢸⠀⢇⠜⡠⢣
// ⡄⠂⠔⠠⠂⢄⠡⠐⡈⠐⠄⠨⡀⠅⡐⠈⠢⢀⠅⢑⠈⢄⠂⡁⢊⢀⠑⡀⠂⠢⢀⠅⠀⡐⠡⠈⠀⠀⢹⡯⣷⠠⡀⠀⠙⠳⢯⣻⢞⡷⣽⡇⢪⢊⢆⢳⠘⠂⡀⠀⠀⡠⠁⠀⡐⠢⡈⠠⠂⢌⠐⢄⢊⠐⠌⠂⡀⠂⠄⠠⢈⠀⢂⢞⢜⢊⠢⡑⢅⢣⢘⢌⠢⡱⢨⢊⢆⢣⠀⠌⢀⠂⠄⡈⠀⢇⠨⡊⢔⠡
// ⢝⢆⠈⠀⡑⠀⢊⠄⠌⡐⢁⠂⡐⠄⠨⠈⡂⠐⠄⢂⠁⠢⡈⠐⠄⢂⠐⡀⠑⢄⠡⡈⢀⢊⠢⠈⡂⠀⠘⣯⡻⣧⢘⢄⡀⠀⠀⠈⠉⠻⠾⢇⢕⠥⠃⠁⢀⢦⠁⠀⡐⢌⠀⠠⡑⠐⢌⠐⡡⠂⠑⠠⠀⢂⠐⠠⢀⠡⢈⠀⠂⣠⢫⡪⢡⢊⢌⠪⡢⡑⢔⢡⢃⠮⢂⠕⢔⠱⠄⠂⠠⠂⡐⢀⠁⠘⡆⠨⡂⡑
// ⠀⠹⡳⡄⠀⠌⠀⠄⠂⠐⠄⠨⢀⠌⢐⠁⡈⡐⢁⠂⡡⢁⠌⡈⠢⡁⢌⢐⠡⡂⡑⠌⢄⠕⡈⠢⡨⡀⠀⣯⣟⣽⡆⠧⠸⠄⠀⠀⠀⠀⠈⠈⠈⠀⠀⡰⣑⢮⠀⢐⠐⠔⠀⠅⡈⢈⠀⡁⠠⠀⠅⠐⠁⠄⠠⢁⠀⢂⠀⠂⣜⢕⠕⢄⠣⡢⡑⢕⠨⡊⢆⠅⡞⢠⠣⡨⡑⠒⠦⠐⠁⢂⠐⠠⢈⠀⢱⡈⠔⡈
// ⠀⠂⠈⠺⢦⡀⠡⠀⠅⡈⢐⠀⢂⠀⢂⠈⠠⢀⢁⠈⡐⠀⠊⠄⠑⠔⠄⠅⠊⠔⠡⠃⠪⠐⠌⠢⠢⠈⠂⠘⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢈⠄⠐⡀⠂⡐⢀⠡⠈⡠⠁⠌⠐⠀⠌⠀⢄⢞⢜⠎⡘⢔⠱⡈⢎⠢⡃⡪⢢⠺⡁⡪⢢⢑⢌⠱⡑⢆⠁⠠⠂⠁⠄⢂⠀⢎⡐⢌
// ⠀⡑⠠⠀⠑⢝⢦⡐⠀⡐⠀⠌⠀⠌⠠⠀⠅⠠⠀⡂⠠⠁⠌⠐⡀⠂⠄⡈⠐⡀⢂⢈⠀⡂⠐⡀⠠⠁⠑⠀⠠⠀⢂⡀⣠⣾⣻⣯⢑⡀⠀⠂⠀⠀⠀⠀⢀⡀⡤⢒⢄⠐⢀⠐⡀⢂⠈⠠⠀⡂⠐⡀⠂⠨⢀⠁⡐⢁⢮⢣⠃⡜⡨⢢⢑⢅⠣⡪⢨⠴⡍⡱⠨⡢⠱⡨⡂⡣⢊⠜⡄⠂⢈⠄⠡⠀⠂⡀⣑⠠
// ⠐⠠⢀⠁⢂⠀⠘⠮⣢⡀⠈⠠⠁⡐⠁⡈⠄⢁⠂⠐⡀⠡⠐⠁⠠⠈⠄⠠⠁⠄⠄⠠⠂⠠⠁⠠⠀⠁⢀⡔⢊⢙⡐⢡⣟⢾⣎⢫⣷⡐⠄⢆⢆⢒⢒⢆⡷⣻⡇⡱⣑⠐⡲⢤⠀⠂⡈⠐⡀⢂⠈⠠⠈⡐⠠⠈⣠⢫⡪⢁⢎⠔⡡⢃⠆⢕⡡⣎⠓⡡⠢⡊⢎⠸⡨⠢⡱⢨⢊⢌⠪⡄⠂⠐⠠⠊⡨⠀⠌⠳
// ⠀⠂⠄⠡⠀⠌⢀⠄⠈⠺⢦⡁⠐⢀⠐⠀⢳⡀⠈⠄⠐⡀⠡⠈⡠⠁⡐⠁⡐⢀⠊⢀⠂⠁⢐⣤⡾⢛⡵⡾⢛⢉⢀⡿⣽⡘⣯⢦⠻⣷⡩⡀⢇⠱⣡⠟⢸⡿⢐⠌⢦⡁⡐⢌⠃⠠⠀⡡⠀⠄⢁⠂⢁⠄⠊⡰⡕⠵⢁⢎⠇⡜⠨⣊⠴⠍⡊⢔⢌⠪⡘⢌⠢⡃⢎⠪⡢⡑⡌⡢⡱⢨⡄⠡⠑⠈⠀⠀⠄⠐
// ⠡⠈⠄⠡⢈⠐⡀⢐⠀⠂⠈⠙⢗⣄⡀⠁⠀⢟⣄⠠⠁⠐⡀⠡⠀⠂⠄⡈⠄⡀⠂⠄⡀⢱⣟⢷⡽⡏⣋⣴⠕⢡⡇⡟⣾⣇⠸⣯⢧⢹⡿⣔⠨⣲⠏⢂⣿⠇⡪⢊⢆⠂⡅⢪⠉⢧⠀⡀⢂⠈⠄⢄⠁⠀⣜⢕⡝⢡⠪⣣⠬⠲⡙⡨⡐⠕⠱⡨⢢⠱⡨⡊⢜⠌⢆⠕⡌⢢⢊⢒⢔⢇⠗⠈⠀⢀⠁⠐⠀⠄
// ⡅⠨⢀⠡⠀⡂⠐⠠⠈⠄⡁⠐⠀⠑⢝⢦⣀⠘⡬⡳⣄⡁⠠⠐⠁⡈⠄⠐⠠⢀⠡⠐⠀⠀⣿⠽⣡⡾⢋⡐⠌⣼⠇⡇⢻⢾⣆⠘⣯⢧⠘⣿⡆⢋⠌⣾⠏⡰⢡⠣⡪⢘⢌⠰⡱⡨⢢⡀⠄⡐⠁⠀⠀⠈⠁⠑⠐⠂⠒⠔⡪⢫⠲⣌⢌⡙⡢⢢⡀⡁⠘⠨⠢⡣⡱⢨⠊⠦⡡⣎⠳⠁⡠⠡⡀⢀⠀⡁⠠⠀
// ⡌⠢⡀⢂⠐⡈⠠⠁⠌⠠⡀⠡⠁⢂⠀⠈⠪⢳⢘⢖⠈⠚⢦⠐⢀⠐⡀⢁⠂⠄⠂⠐⣀⠨⠟⣚⣵⠞⡉⢔⡺⣿⢀⢮⡈⢷⡻⣦⡈⢿⡆⢹⡇⢌⡼⢃⠜⢔⢅⢣⠊⡔⡱⢈⢆⠳⠐⡁⠐⠀⠈⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠈⠪⠪⣆⢕⢌⠪⡢⢔⠀⢀⠈⠂⠙⢔⠧⠃⠠⢂⠐⡐⢄⠀⡀⠠⠀⠀
// ⡕⡑⣌⠀⠠⠐⠀⠅⡈⠄⠐⠠⢁⠀⠀⠔⢀⠀⠁⢝⢥⠀⠀⠙⠦⣠⠐⢀⠐⠀⠌⣰⣫⣷⡻⠟⡨⢂⢁⡾⣽⡏⢸⡄⣿⣪⠻⣮⡻⣦⡻⡀⠁⢪⠢⡑⢕⠱⡨⠢⡱⡨⡊⡰⠁⡁⠂⠀⠠⠀⠂⠀⠂⠀⠁⠀⠐⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⡕⣜⢄⠫⠢⡄⢁⠢⠐⠀⠈⠠⠡⡈⠔⠠⠡⡀⠀⠂⠀
// ⡎⢢⢊⠪⡢⣀⠁⠐⠠⠈⢄⠁⠀⠀⠌⡐⠠⠈⠀⠈⡗⣇⠠⠀⡀⠈⠑⠦⣈⠀⠞⡩⢔⠔⡌⢆⠪⠰⣝⣟⢾⡃⢜⡇⢺⣝⣟⣮⣻⠞⡱⢄⠢⡣⡑⢕⢑⠕⡱⠱⡌⠎⠠⠐⠄⠀⠠⠀⠠⠀⠀⠂⠠⠀⠁⠀⠁⢀⠀⠀⠁⠀⠁⢀⠀⡀⠀⠀⠀⠀⠐⠱⡩⢊⡴⡫⠂⡀⠀⠄⢀⠀⢀⠈⠂⢑⠐⡀⠁⠀
// ⡕⡡⢊⠆⢕⢄⠣⢢⢀⠀⠂⠀⡀⡑⠀⠂⠀⠀⠀⠀⠘⡮⡆⢀⠐⡀⢂⠀⡀⢁⠂⠠⠈⠊⠪⠌⡃⢹⣯⣞⣿⠠⡊⣧⠘⣷⢽⠎⡡⡊⡔⡱⠨⡢⡱⡡⡣⡱⢉⠊⡠⠈⠂⠀⢀⠀⠄⠠⠀⠐⠀⠄⠀⠄⠈⠀⠂⠀⠀⠁⠈⠀⠂⠀⠀⢀⠀⠐⠀⠀⠀⠀⠀⠙⠃⠰⡠⢈⠌⢂⠄⡀⠀⠄⠠⠀⠈⠐⢈⠀
// ⢎⠰⡡⢊⠆⡅⢕⠡⡊⡑⠦⠀⠄⠈⠀⡀⠈⠀⠁⠀⠀⠸⡪⡆⠀⡐⢀⠂⠄⠂⠄⡁⢂⠈⡀⠠⠈⠈⠑⠯⠻⣧⡘⠼⡈⠽⡡⡊⠦⡱⢌⢎⢸⡐⢕⠜⢀⠅⡐⠄⠀⢀⠀⠄⠀⡀⠀⠀⠄⠐⠀⠀⠄⠀⠐⠀⡀⠈⠀⠐⠀⠐⠀⢀⠁⡀⠄⡐⢀⠂⠀⠄⠀⠀⠀⠀⠨⠂⢔⠁⡐⠌⡐⢀⠄⠀⡁⠠⠀⠀
// ⡣⠑⠌⠂⠑⠈⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠂⠠⠀⠀⠀⢫⢺⡀⠠⠀⠂⠌⠐⢄⠐⢀⠂⡐⠀⠢⢀⠄⠀⠀⠀⠀⠌⢈⠑⡈⠊⠊⠲⠑⠎⢂⠡⡀⠢⠐⠀⠀⠀⢀⠀⢀⠀⠄⠀⠈⠀⠀⠄⠐⠀⠀⠂⠠⢀⠀⠄⢂⠐⡈⠄⡁⢂⠐⡀⢂⠐⠠⠈⠄⠀⠀⠂⠐⠀⠀⠈⠠⠑⠰⡈⢄⢁⠂⠢⡀⠀⠂⠀
// ⠐⠔⠤⡡⠌⠤⡡⡈⢔⢀⠢⢀⠡⠀⠄⡁⢀⠂⢀⠀⡀⠀⠀⢣⡫⡄⠈⡐⠈⡐⢀⠁⠱⡠⡀⢑⠀⡂⢈⠐⠂⠤⡀⡀⠀⠀⠀⠁⠈⠀⠑⠐⠀⠀⡀⠀⠀⡀⠀⠂⠀⡀⠀⢀⠀⠐⠀⠁⢀⠀⠄⡐⠐⠠⠁⢄⠈⡐⢀⠂⡐⠠⠐⡀⢂⠐⠠⠈⠄⠡⠈⠄⠁⠀⠄⠀⠁⡀⠀⠈⠐⢈⠢⢄⠑⡈⢄⠑⠄⡂
// ⡀⢂⠈⠢⢈⠂⠐⡁⠊⠔⠡⠑⢔⠑⡔⢄⠆⡰⡀⡢⡈⡐⠀⠀⠱⡳⡄⠐⠀⠂⠄⡁⢐⠀⡈⠢⡡⡈⢢⡐⠅⡠⡀⡈⡀⠃⠤⠠⣀⡀⢀⠀⠀⠀⠀⠠⠀⠀⠀⠂⠀⠀⡀⢀⠠⠐⡀⢁⠂⡈⢄⢠⠡⡨⡐⠄⠢⠒⠐⠂⡈⠄⡁⠡⠀⠌⠠⠁⠈⠀⠁⠀⠐⠀⡀⠈⠀⠀⠠⠀⡀⠀⠂⠌⠑⢆⠔⡈⡐⢈
// ⠠⠀⢂⠁⠠⠁⢊⠀⠌⢀⠂⠡⠀⢂⠠⢀⠐⠠⠀⠄⠄⠨⡀⠀⠀⠹⡪⣄⠁⠨⠀⡂⠐⠄⠐⠠⠀⠌⠢⡈⡙⠲⢦⢌⡈⠌⡂⢂⠠⠄⠡⠁⠓⠐⠡⠤⠠⡐⠠⠔⢄⠆⢔⠄⡢⠒⡐⡁⡊⢠⢁⠐⠄⠠⠐⡀⠡⠀⡁⠂⠐⠀⠀⠁⠀⠂⠀⠀⢈⠠⠀⠈⢀⠀⢀⠀⠁⠠⠀⡀⠀⡀⠀⠈⠂⠌⠊⢦⢈⠄
// ⠁⠌⠠⠈⡠⠁⠄⢂⠈⠄⠠⡁⢈⠄⠐⠠⠈⡠⠁⢂⠨⠀⠄⠀⡀⠀⠑⣝⢆⠐⠠⠀⠅⠐⡁⠐⡀⡀⠀⠀⠈⠂⠢⡁⠛⠒⠤⢀⠡⠈⠁⠑⠘⠐⠂⠢⠢⠠⠢⠐⢄⠔⡠⣈⢀⡁⣈⢀⡀⡀⠀⣈⠀⡀⠄⡀⠀⣀⣀⡀⢀⣀⣀⡄⠠⢀⠄⠡⢀⢀⠀⡠⠀⡀⢀⠀⠐⠀⢀⠀⢀⠀⠄⠀⠄⠈⠢⢈⠢⡣
// ⠀⠌⠐⠄⢐⠀⠊⠠⢀⠑⠀⠔⠀⠄⠡⠈⠄⢐⠀⠁⢀⢠⠐⠔⠁⡈⢀⠈⠷⣥⠀⠌⠠⠁⢄⠈⠄⠠⠁⢂⢀⠀⠀⠈⠈⠢⢄⡀⠂⠁⠢⠠⡀⡀⠀⡀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⢀⠀⡈⠘⠊⠉⠀⠈⠄⠨⠀⠀⠉⠉⠋⠊⠈⠀⠐⠠⠀⠁⠂⠀⠂⠀⢀⠈⠀⠈⠀⠄⠀⡀⠀⠀⡀⠀⠀⠀⢀⠐⠠⡘
// ⠠⢈⠐⡀⢁⠌⠠⠁⢄⠈⢂⠨⢀⠁⢂⠁⠢⠀⡄⢕⠨⠂⠐⠄⠨⠀⠀⠀⠈⠪⡳⡄⠂⠁⠄⠠⠁⠂⠡⢀⠂⡈⠐⠠⡀⢀⠀⠈⠈⠒⠄⣁⠐⠈⠂⠢⠂⢅⠰⠠⡀⢂⠄⢄⠢⠂⠢⠁⠈⠀⠀⠀⠠⠀⢀⠀⠠⠀⠀⠀⠀⠀⠀⠀⢀⠀⡀⠄⠠⠀⠠⡀⠠⠀⠄⠂⠐⠀⠀⠀⠠⢀⠄⠔⡁⠑⠄⠑⠀⠈
// ⠅⢐⠀⠢⠀⡂⢈⠐⠠⡀⠡⠀⢂⠈⡀⢄⢆⠱⠈⢂⠀⢊⠀⠊⠀⠐⠀⡀⠀⠀⠙⡺⢦⡈⠀⠡⢈⠈⡐⢀⠂⡈⠄⢁⠄⠠⠂⠐⠄⠠⢀⠀⡈⠐⠂⠄⢁⠀⠊⠐⠈⠐⠐⠐⠀⠁⠀⠀⠀⡀⠀⠁⢀⠀⡀⡀⠠⢀⠄⡁⢐⠀⡊⢀⠡⠀⠔⢀⠂⠁⠂⠀⠐⠀⠀⠀⢀⣠⣀⣣⠨⠂⠈⠀⠠⠀⠄⠀⠂⠀
// ⡁⢂⠈⡐⢀⠢⢀⠁⠂⢄⠈⠂⡠⠢⠑⠔⠁⠄⠡⢀⠌⢀⠀⠂⠐⠀⠄⠀⡀⠀⠀⠈⢪⢳⣌⠀⠂⠐⡀⢂⠐⠠⠈⠄⠐⠠⠁⠌⠠⠁⠄⠂⡐⢀⠂⡐⠀⠂⠄⠠⢀⢀⠀⡠⠀⠄⡐⠐⡀⠂⠌⠠⢁⠐⠠⠀⠅⠠⠐⡀⢂⠐⡀⠂⠀⢁⠀⡀⢀⠄⠠⠂⠐⣀⡥⡺⡹⠂⠃⠀⠀⠀⡀⢁⠀⠐⠀⡈⠀⠂
// ⡕⠀⠔⠀⠂⠄⢂⠈⡐⢀⠔⠑⡈⡐⢁⠈⡐⢈⠐⠀⡀⠀⡀⠐⠀⠄⠠⠀⢀⠀⡠⠀⠄⠑⢎⡳⣌⠀⠐⠀⠌⠠⠁⠌⠠⠁⠂⠂⢂⠂⠂⠂⠄⠠⠂⠠⠁⠌⡀⠡⠀⡂⠐⡀⢂⠐⠄⢈⠄⢈⠄⠡⠀⠌⠠⢁⠈⠂⠐⢀⠀⠄⠠⠀⠅⢐⠀⠔⠀⣐⡠⣖⢫⠮⠊⠁⠀⠀⠀⡀⠐⠀⡀⠠⠀⠁⠠⠀⢈⠀
// ⡊⠠⠈⠄⠑⠀⠄⡢⠐⡁⠌⠐⠀⠄⢂⠐⡀⠂⠀⠂⠀⡀⠠⠀⠄⢀⠀⠄⠠⠂⠄⠨⠀⠀⠀⠱⡪⡳⣌⠀⠊⡀⠡⠈⠄⠡⠈⠂⢄⠈⠌⡀⠑⡀⠅⡈⠐⠄⠄⡁⠂⠄⡁⢐⠀⠂⠌⡀⠐⡀⠔⢀⢁⠈⠠⠀⠄⠡⠈⠄⠠⠁⠂⢁⠂⣀⡢⡔⡯⡪⠚⠈⠀⠀⠀⠀⠀⠀⠂⠄⠐⢄⠀⠄⢀⠁⠐⠀⡀⠀
// ⠂⠄⡁⢐⢁⠜⠈⢄⠈⠄⡐⠈⠄⡁⠐⠄⠀⠐⠀⠂⢀⠀⡀⢀⠀⡀⢄⠈⠂⠌⠀⠂⠀⠄⠀⠀⠈⠪⡪⡳⣤⡐⠀⠡⠈⠄⠡⠈⡀⢂⠐⡈⠠⠐⠠⢈⠐⠐⠄⠠⠁⡂⠐⡀⠡⠈⠄⠐⡈⢀⠐⠠⠀⡡⠈⠄⠑⡀⠡⠈⡀⢁⡨⡔⡮⡱⠙⠈⠀⠀⠀⢀⠀⡀⠠⠀⠌⠠⠀⠔⠀⠄⡈⢈⠀⡑⠈⠢⠐⢄
// ⢀⠂⡰⠈⠂⠠⠁⠠⡐⠈⠠⠈⠄⡈⠀⠄⠈⠀⠐⠀⢀⠀⠀⠠⠐⠠⠠⠈⠂⠀⠐⠀⠄⠠⠀⠀⠀⠀⠀⠑⢎⠞⠦⠁⠐⠐⠠⠁⡐⠀⠔⠄⠠⠁⠂⠄⡈⠐⡈⠐⠄⠄⠡⠀⠌⠐⡈⢀⠂⠄⠁⠌⠠⠐⠀⠊⠠⢀⡢⠴⡪⡝⠜⠊⠀⠀⠠⠐⠀⠌⠐⢀⠂⠄⡈⠐⡈⠠⠁⠄⡁⠂⠠⠂⠐⡀⢁⠐⠁⠄
#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define fo(i, n) for (i = 0; i < n; i++)
#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
#define ll long long
#define deb(x) cout << #x << "=" << x << endl
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(x) memset(x, false, sizeof(x))
#define sortall(x) sort(all(x))
#define tr(it, a) for (auto it = a.begin(); it != a.end(); it++)
#define PI 3.1415926535897932384626
#define mod 1000000007
typedef pair<int, int> pii;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pl> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
// int main(){
//     int t;
//     cin>>t;
//     while(t--){
//         int n;cin>>n;
//         string s;cin>>s;
//         s[0] = '(';
//         s[n-1] = ')';
        
//         for (int i = 1; i < n - 1; i++) {
//             if (s[i] == '_') {
//                 if (s[i-1] == '(') {
//                     s[i] = ')';
//                 }
//                 else if (s[i-1] == ')') {
//                     s[i] = '(';
//                 }
//             }
//         }

//         int cost = 0;
//         stack<int> st;
//         for (int i = 0; i < n; i++) {
//             if (s[i] == '(') {
//                 st.push(i);
//             } 
//             else if (s[i] == ')') {
//                 if (!st.empty()) {
//                     int x = st.top();
//                     st.pop();
//                     cost += (i - x);
//                 }
//             }
//         }
        
//         cout << cost << endl;
//     }
        
// }

#include <iostream>
#include <stack>
#include <string>
using namespace std;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        string s;
        cin >> s;

        stack<int> op;
        int cost = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '_') {
                s[i] = (i > 0 && s[i - 1] == '(') ? ')' : '(';
            }
            if (s[i] == '(') {
                op.push(i);
            } else if (s[i] == ')') {
                if (!op.empty()) {
                    int open_pos = op.top();
                    op.pop();
                    // cost += (i - open_pos);
                    cost+=i;
                    cost-=open_pos;
                }
            }
        }

        cout << cost << endl;
    }
    return 0;
}

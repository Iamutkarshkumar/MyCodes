// ⡤⢂⠀⡤⠂⠤⢀⠠⡠⢔⠤⡢⠔⢀⠀⡀⢀⠀⡀⢀⢀⢀⢀⢀⢀⠀⡄⢀⠄⡠⢀⠄⢄⠄⢄⠄⡄⢄⠤⠠⢄⠤⡠⢄⠤⡠⢄⠤⡠⢄⠤⡠⢄⠤⡠⢄⠤⡠⢄⠤⡠⢄⠤⠤⡤⡠⠲⡲⢲⢲⡄⠲⡲⡲⡲⣖⢤⠀⡠⢀
// ⠂⢡⢪⠊⠐⠐⠄⠑⡜⢢⢓⠌⡢⠁⠢⢀⢕⠅⡨⠂⡴⢡⡂⠅⠢⡁⠪⡐⢅⢘⠄⡣⢈⠎⡰⢁⠎⡰⡁⡣⢊⠢⡢⡑⢢⢊⠢⡊⢔⠡⡊⢔⠡⡊⢔⠡⡪⡐⢅⠳⡨⡂⡣⢊⠚⢔⠥⡉⢎⠱⡝⣌⠪⡫⣞⢜⢗⣕⢌⠢
// ⢡⢣⡓⠈⡨⢀⠑⡀⠝⢐⠁⡐⠠⡁⠡⡸⠌⡰⢀⢏⡪⡒⢁⠜⠐⢌⢜⠕⢄⠣⡈⢆⠑⡌⢢⠑⡌⢢⠘⡄⢣⠑⠔⠡⡣⢨⠊⡜⠰⡡⡑⢅⠣⢊⠜⡰⢡⢊⠆⢕⢌⢌⠪⡨⡑⢅⢪⢘⢌⠲⡨⢢⡑⢜⠪⡳⡕⡱⣇⠜
// ⢕⢕⠂⡐⢀⠂⡐⢀⠊⡠⢈⠐⠄⢂⠐⡁⠢⢐⠈⢔⠕⢈⠄⡊⢌⢢⡫⡑⢜⠡⡈⢆⠑⡌⢢⠑⡌⢢⠑⡨⢂⠕⠈⡀⠊⢆⠕⡌⢪⠂⠎⡀⢂⠈⢪⠐⡕⠰⡑⡱⢠⢃⠕⡌⢪⠢⡑⢔⠡⡃⢆⠕⡌⡪⢊⢆⠳⡨⡚⣎
// ⢪⡊⠀⠔⢀⠐⠠⠂⡐⠄⠄⠡⠐⡁⠌⡠⠑⡠⠑⠠⢊⠠⢊⠐⠄⡳⠌⢢⠈⢆⠑⢌⠢⡑⠔⡡⢊⠢⠐⡅⠢⠐⠠⠈⠄⠑⡌⢢⠡⡉⠐⠠⠀⢅⠀⠣⡊⡪⡐⠨⡢⡑⢌⠪⢢⢑⢌⠢⡃⡪⢢⠘⡔⡑⢕⢌⢎⢜⢌⠵
// ⣕⠀⡁⠢⠀⡡⢈⠐⠄⠨⡀⠅⡨⠐⠠⠂⠢⠐⡁⠑⢄⠑⢄⠑⢌⠨⡂⡑⢌⠂⡑⢌⠢⡘⠔⡡⠊⡀⠪⡨⢀⠁⢂⠁⠌⠠⠘⡄⠣⠀⢅⠈⠂⠄⠨⡀⢪⠐⡍⠄⠰⡡⡑⢅⠣⡢⡈⢎⢌⠢⡑⢅⠪⡘⢔⠱⡐⢕⢌⠎
// ⡃⠠⠐⡀⠁⠄⡠⠈⠄⡡⠀⠢⢀⠅⢊⢈⠂⡡⢈⠌⢂⠌⢄⠑⠔⡐⢌⠰⡀⠄⠪⡠⢑⠌⡢⢘⠀⡐⡱⠀⢄⠈⠄⣄⣑⡐⣄⣘⢀⣅⡄⢌⣐⢁⣂⠐⡀⢣⢊⢂⠁⡐⢅⠱⡑⢔⠂⠄⢕⠱⡨⢢⠘⢌⢢⢑⠍⢦⢑⢕
// ⠀⠂⠡⢀⠁⠂⠄⠌⡐⠠⠈⡂⠐⠄⠢⢀⠅⡐⠄⡂⠡⠂⡂⢑⠌⡰⠠⡡⠀⠨⢂⠜⡠⢊⠔⠁⠠⡈⢆⡱⢢⢫⢪⡮⣫⡻⡼⣝⡽⣪⢯⡫⡷⡱⢌⠧⡹⠠⡅⢅⠐⡀⠡⢣⢘⢄⠣⠐⠈⢆⠕⡌⡂⠨⡢⡑⢕⢡⢣⣘
// ⠀⡁⠢⢀⠈⠂⠌⠠⠐⠐⠄⠨⡈⢐⠁⠔⠠⠂⢌⠠⢑⠀⡊⠔⡐⢄⢑⠀⡀⠑⢄⠱⡠⢑⠌⠠⠁⡌⢢⡱⡱⣡⢟⢾⣕⢟⣞⢮⡻⣮⡳⣝⢾⣕⢕⢕⡹⡂⠪⠢⠐⡀⡁⠢⡑⢌⠪⠀⢅⠘⢔⠌⡪⠀⠔⡡⢣⢑⠆⢮
// ⠀⡀⠂⠄⢈⠐⠈⠄⠑⡀⢑⠀⡂⠠⢁⠌⢂⠑⠠⢂⠁⠠⡈⡂⠢⢂⠁⠠⠀⡌⢂⠑⡄⠱⡀⠂⡎⡐⢜⢔⠕⣮⣫⢗⣝⢷⡹⣳⢝⡮⡻⣮⡳⣝⡆⢧⢪⣑⢉⠪⡀⠔⠀⠂⢱⠈⡎⢐⠀⠂⠱⡈⢎⠐⡁⠸⡐⣅⠣⣓
// ⠀⠠⠈⠄⠠⠈⠄⠑⠠⠐⡀⠢⠀⢂⠂⠔⠀⠌⢂⠡⠂⠐⠄⡊⡐⡁⢁⠐⠀⡇⠨⡂⠜⡐⠠⢀⢇⠈⣎⠪⣺⢕⢷⣝⢮⡳⣝⢗⢯⣞⢽⡪⣟⢼⣣⠣⡣⡪⢐⠅⣪⠀⡁⠡⠈⡪⡐⡁⢈⠌⠀⢇⠱⡁⠌⠠⢣⢘⢌⢎
// ⠐⠀⠂⠀⠐⡈⢀⠑⡀⢐⠀⠂⠀⡂⢈⠂⡀⢑⠠⠂⠐⠀⢊⠄⢌⠐⡀⠐⢀⢗⠨⡐⠅⢌⠀⢸⠂⠅⡎⡕⣽⡹⣧⣫⢗⡽⣪⢏⡷⣹⡳⣝⢮⡳⣽⡘⡜⣪⠐⢅⢪⡂⠄⠑⡀⠢⢌⠠⠂⠠⡁⢘⠔⡁⠌⢂⠢⡱⢌⠦
// ⠀⠀⠂⠈⢀⠐⡀⢂⠀⠄⡈⢀⠁⠄⠡⡀⠀⠢⠐⡁⠈⡀⠂⠢⠂⠅⠀⠌⢐⢕⠐⢌⠢⢁⠀⣕⢃⠊⣎⢪⡞⣵⢣⡯⣳⢝⡮⣳⢝⡮⡻⣮⡳⣝⢮⡳⡸⢔⠡⡁⠳⠢⢈⠐⡀⢂⠑⡄⢈⠐⠠⡀⠣⠌⡠⠁⠔⢨⢂⡓
// ⠀⠐⠀⠄⢀⠐⠠⠀⠄⠠⠀⠄⠀⠨⡀⠄⠈⠠⡁⠄⠠⠀⡈⠌⢊⠄⠁⠄⢸⡨⡃⠔⡁⢂⠀⡎⢵⠈⡦⢱⢯⡺⣕⢯⡺⣕⢯⡺⣕⢯⡻⣜⡽⣪⢗⡽⠈⣠⠂⢰⣇⢫⡂⠐⠠⢀⠅⣝⠀⠌⡐⢀⠱⡁⢄⠡⠑⢄⢣⡑
// ⠀⠠⠀⠠⠀⠄⠁⠄⢀⠐⠀⠂⠈⠠⠐⠀⡈⢀⠂⠐⠀⠂⢰⠈⡐⠄⢈⠀⢰⠑⠧⠈⡂⢐⢀⣉⣌⡀⡁⠹⣣⢟⡼⣣⢟⡼⣣⢟⡼⣳⢝⡮⣞⢵⡫⣶⢩⠆⢌⡺⣵⡡⡣⢈⠐⠄⢰⠱⡂⠂⠔⠠⠂⠢⡀⡊⡐⠡⢢⠑
// ⠠⠀⠂⠀⠄⡈⠠⠀⠀⠄⠠⠈⠀⠄⠁⠄⢀⠀⠅⢈⠀⡁⠜⢅⠐⡀⠂⠐⢰⢑⢿⡄⡑⠠⠀⡦⣻⠄⡝⣸⢧⡻⣜⢧⡻⣜⢧⡻⣜⢧⡻⣜⢷⣝⢮⡳⡱⠑⢄⣛⣘⣊⢪⠀⢂⠂⢸⡱⡱⠈⢄⠑⡈⢂⠔⢈⠌⡊⢔⠡
// ⠀⢀⠀⠂⠀⠄⠠⠀⠁⠀⠄⠐⠀⠄⠁⠠⠀⡀⠂⠄⠠⠀⡫⡊⢆⠠⢁⠈⠰⡑⢏⢚⡐⠐⡀⡣⡙⢧⢘⢜⡧⣻⢜⡧⣻⢜⡧⣻⢜⡧⣻⢜⡧⣫⢗⢕⡕⢡⡯⣳⢝⡵⡱⡅⠠⢁⡮⢢⢝⠀⠢⡈⠄⠢⢈⠂⢌⠢⡑⠠
// ⡠⣆⠏⠀⠠⠀⠄⠀⡁⠐⠀⠐⠀⠂⢈⠀⠄⢀⠐⠀⠂⠠⡣⢹⡌⡂⢀⠂⠨⡪⣫⢗⡽⣄⠀⣳⢜⡪⡆⣹⢎⡷⣹⢎⡷⣹⢎⡷⣹⢎⡷⡹⣮⢳⣝⣝⠇⠼⠓⠙⠃⠛⠐⠁⡂⠸⢇⡣⡃⡌⢂⠔⢁⠁⡂⠢⠈⢆⠅⡈
// ⡗⠌⠀⡀⠠⠀⠐⠀⢀⠐⠀⡁⢠⡛⡠⢦⡀⠄⢀⠁⡈⢀⢇⢪⢞⡌⢆⠀⡁⠎⠷⠹⠎⠞⠆⠸⢧⡻⣺⢌⡷⣹⢎⡷⣹⢎⡷⣹⢎⢷⣝⢽⡪⣗⢵⠅⠀⠔⠠⡊⠄⣸⣩⡣⠐⢠⢾⢌⢜⡂⠢⠂⢂⠨⠀⢂⠁⢎⠠⠀
// ⢋⡠⠎⠀⠀⠐⠀⠁⡐⠁⠔⡨⢘⢆⢳⡑⣝⢄⠠⠀⠄⠀⡇⡱⠝⠊⠈⠀⠠⠀⢄⠄⡄⠄⢰⠤⡤⣀⠳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢧⡻⣎⢷⡹⡮⡆⠁⡔⡈⠾⣻⣯⣻⡇⣢⢟⣳⡃⡗⢀⠑⡈⠄⠠⢁⠐⠀⠅⠠⠀
// ⡧⣙⢠⢔⠃⢀⢼⡀⠐⡡⠑⢄⢜⡕⡱⡕⣕⢳⠀⠄⡈⠀⢪⢄⣄⠐⠄⠑⡀⢂⠀⠢⣨⣆⣟⢷⣳⡜⣗⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢞⠷⡮⣎⠵⡴⡻⣚⢷⡹⣳⢝⡮⡪⠂⠄⠡⠀⠄⠡⠀⠌⠠⠁⢂⠀
// ⡗⢜⠦⣃⢴⡙⢦⡃⠀⠢⠑⣌⢎⢮⢘⢎⢮⣁⢛⢖⡀⠁⠰⡂⢮⠳⡮⣤⡐⠖⡪⢂⡭⣮⡻⡷⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢯⡺⣭⢻⢮⢯⡝⣷⡹⣳⢝⡎⠂⠐⡈⢀⠊⢀⠂⢁⠐⢀⠂⠄⠀
// ⢏⠪⠊⠆⠣⠊⠢⡉⢀⠃⡜⢔⢕⡕⢱⢕⢵⡡⢇⢝⢮⡀⠈⢎⢜⢝⢮⢲⢭⡫⣝⢵⢕⢖⢞⢮⡺⣕⢽⡪⣳⢝⡮⣳⢝⡮⣳⢝⡮⣳⢝⡮⣳⢝⡮⣳⢝⡮⣳⡫⣮⢻⣜⣝⢷⡹⡇⠈⢀⠂⡀⢂⠀⢂⠀⠂⠠⠀⠂⠀
// ⠂⠠⢁⠈⡀⢁⠐⠀⠐⢜⠌⡧⢣⢝⢸⢪⢲⡱⢩⢎⢮⡢⡂⠰⡁⢯⡪⡳⣕⢽⡸⡣⣯⡹⣣⢏⡞⣮⢳⡝⣮⢳⡝⣮⢳⡝⣮⢳⡝⣮⠱⣫⢞⡵⣫⢞⡵⣫⢞⡵⣝⠷⡵⣝⢷⣝⠢⠐⠀⠄⠠⠀⠂⠠⠈⠀⠂⡀⢁⠠
// ⠠⠁⠠⠂⠠⠀⠄⢁⠐⠠⡑⢈⢣⡣⡱⢕⢕⢭⢪⡚⢦⡫⢸⡂⢱⡘⢎⢗⢵⡣⡻⣜⢦⡫⣎⢷⡹⣪⢳⡝⡮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡐⢝⢮⡳⣝⢮⡳⣝⢮⡺⣎⢟⣞⢵⡳⣝⢐⠀⠌⠀⠂⢁⠈⠠⠀⠁⠄⠠⠀⡀
// ⠄⠡⠈⢄⠁⡂⠐⠠⠀⠂⢌⠐⠄⢕⠸⡱⡱⡣⢸⢕⢕⡝⡄⢫⢕⢝⢎⢗⢵⡹⣪⢺⡪⡞⡼⣕⢝⢮⢳⢝⢮⡳⣝⢮⡳⣝⢮⡳⣝⢮⡣⡑⣹⢎⡷⣹⢎⡷⣹⢎⡷⣹⢎⡷⣹⠆⡅⠠⠀⡁⠂⡀⠐⢀⠈⠀⠂⠠⠀⠀
// ⠂⢈⠐⠄⢌⠠⠑⠠⡈⢀⠀⠕⢈⠢⢑⠁⢏⢺⣂⢳⢱⢍⢞⡄⢳⡙⣎⢳⢕⢵⡱⣣⡫⡺⣪⢎⣗⢝⡕⡯⡺⣪⢎⣗⢝⢮⡳⣝⢮⡳⡅⡪⡮⣳⢝⡮⣳⢝⡮⣳⢝⡮⣳⢝⡎⠠⡈⢄⠠⠀⠄⠀⠂⠀⠄⢁⠐⠀⡈⠀
// ⡁⠀⠔⠐⢄⠡⡑⠐⠄⠂⢀⠨⠂⠡⢊⠄⢅⠑⢎⢎⢕⢕⢕⢝⢤⠹⣌⢗⢕⢧⠳⣕⢝⢮⡪⡮⣪⢳⡹⣪⢫⢮⣣⡫⡳⣕⢝⢮⡳⣝⡢⣻⢜⢧⡫⣞⢵⡫⣞⢵⡫⣞⢵⠋⠈⢦⠂⠔⡁⡑⡈⠢⠢⠠⡀⡀⠀⠁⠠⠀
// ⠀⡈⢀⢁⠐⠀⠈⠀⠠⠀⡀⠀⢑⠈⠢⡨⡀⢣⢈⠪⣂⠣⡫⡪⡣⣣⠘⣎⢳⡱⡫⡪⡳⡕⡵⡹⣜⢵⡹⡜⡧⡳⣕⢝⢮⡪⡳⣕⢽⡜⣵⢹⢎⢷⡹⣎⢷⡹⣎⢷⡹⣎⠇⢈⢂⠈⢧⠐⠄⠌⢄⢑⠈⡢⠈⠔⠑⢂⠆⡨
// ⢆⠊⠂⠁⠀⠈⠀⠁⢀⠀⠄⠀⠀⠡⡈⠔⡐⠄⡑⢄⠑⢆⠨⠪⡪⡪⡳⡀⠳⣱⣙⢎⢞⢜⢎⢗⠵⣕⢝⢮⢺⢕⡝⡮⣣⢻⢜⢮⡺⣪⢎⢷⡹⣎⢷⡹⣎⢷⡹⣎⠗⠁⢀⠂⢄⢁⠘⢧⡈⠂⠢⠠⡁⠔⢁⠅⡑⠄⡊⠠
// ⠀⠀⠀⠄⠀⡁⠈⠀⠀⠠⠀⠀⠁⠀⠀⢂⠌⠢⡈⠔⡡⠊⠄⡣⢈⠮⡪⡹⡱⣄⠣⡫⣪⢣⡫⣪⢳⢕⡝⣎⢗⢵⡹⣪⡣⣫⢳⡕⣝⢎⢷⢕⡝⡮⡳⣝⢮⡳⡝⢌⠪⠀⡐⢀⠂⠄⠂⠱⣕⠌⡐⠐⠄⠊⠠⠂⢌⠐⡈⠢
// ⠀⠈⠀⠄⠠⠀⠠⠀⠁⠐⠀⠁⠀⠈⠀⠀⠀⡑⠄⢊⢄⠑⡅⠰⡁⢆⠘⡪⡪⣪⢓⢵⡡⡓⢵⢱⢕⢧⡫⣪⢳⢕⠵⣑⢭⡪⡥⣝⢜⢧⡣⡯⣪⣛⢮⡪⡳⢑⢌⢪⡑⠀⠐⠄⠨⡀⢑⠀⢑⣗⠀⠅⠨⠈⠄⡑⠠⠈⠄⡑
// ⢀⠈⠀⠀⠄⠀⠀⠄⠈⡂⠀⢀⠈⠀⠀⠁⠀⠐⠡⢂⠔⠡⡘⢐⠌⢄⠣⡐⠡⢓⢕⢕⢕⡝⡲⣅⡓⠵⡱⡕⢧⡫⡳⡕⡵⡹⡪⣎⢷⡱⡝⣮⢪⢎⢷⢉⠔⡅⡣⢢⡑⠈⡀⠊⡀⠔⠀⡡⠀⢸⡣⡈⢐⠁⢂⠐⡈⢐⠐⠄
// ⠀⠀⠈⢀⠀⠈⢀⠀⠠⡁⠀⠀⠀⠀⠁⠀⠂⠈⠀⠡⡈⠢⡈⠢⡈⠢⢂⢅⢑⠡⠱⡍⡮⡪⣪⢪⣙⢝⢦⣙⠪⣎⡳⡹⣜⢝⢮⢪⢎⢞⢮⡪⡳⠝⡠⡃⢕⢌⠪⡢⡁⠆⠐⠠⠐⡀⠡⠀⠌⡀⢱⡣⡀⠌⡀⠢⢀⢁⠐⡈
// ⠀⠈⠀⢀⠀⠁⠀⡀⠀⡕⠀⠈⠀⠐⠀⠠⠀⠀⠐⠀⡂⡁⠨⠂⠌⠢⠡⡠⢁⢊⠢⡘⢜⡪⡲⡱⡕⣕⢕⡕⡽⢤⡋⢮⡪⡳⡱⣣⢫⡳⣕⠝⡈⢎⠔⡡⢃⠎⡜⡰⡁⡅⢈⠐⠠⠀⠌⠐⠠⠐⠀⢯⡢⠐⠀⠢⢀⠂⠐⠠
// ⠀⠁⢀⠀⡀⠐⠀⢀⠀⠆⠀⠀⠄⠀⡀⠀⠀⠂⠀⠀⠢⢈⠐⡁⡁⠑⠔⡠⢁⠢⢑⠐⡄⢑⠭⡪⡪⡪⡪⡪⡺⢜⢮⡢⡹⡜⡵⡱⣕⠳⡈⢔⠱⡈⢎⢌⠪⡘⢔⢌⢢⡇⠀⠄⠡⢀⠡⢈⠀⢊⠀⠘⡮⡂⢁⠂⡐⠀⡡⠈
// ⠀⠄⠀⢀⠀⠀⠂⠀⠀⡑⠀⠐⠀⠀⠀⠀⠂⠀⠈⠀⠐⠠⡁⠔⠈⠢⡈⠐⢄⠑⢄⢑⢈⠂⠆⢌⠪⢪⢕⢝⢜⢕⡕⡵⡱⡌⢌⠌⢌⢔⢁⠢⡑⢌⠢⡡⢃⠪⡢⡑⣼⡃⠀⠂⡐⠀⠄⠂⠠⠁⠠⠁⠸⣕⠄⠐⡀⠐⠀⠌
// ⠀⠀⠂⠀⡀⠐⠀⠁⠀⡑⠀⠀⠂⠀⠀⠂⠀⠠⠀⠠⠀⠐⠠⠈⠌⠂⡈⠔⠠⠈⠢⠠⡁⢊⠌⡂⡑⢄⢊⠑⢕⠧⡺⡸⡪⡺⢀⠜⡰⢐⠅⡱⡈⢆⠱⡈⢎⠢⡑⣜⢷⡣⠈⠀⠄⠈⠄⠈⠄⠈⠄⡈⠀⢳⢕⡈⠀⡈⠄⠡
// ⠀⠂⠐⠀⠀⠀⠀⠂⠀⡘⡀⠈⠀⠐⠀⠀⡀⠀⠀⠀⠀⠠⠀⢀⠀⢀⢏⠲⡡⡈⢂⠢⢈⠂⠢⡈⠔⡠⢁⠕⢄⡑⠉⡮⣪⠃⡔⢡⠊⡔⢡⠢⡑⢌⠂⡕⢌⠪⣰⢏⡷⡳⠀⢁⠈⠄⠈⠄⡈⠐⠠⠀⡁⠈⡮⣱⠀⡀⢂⠐
// ⠀⠄⢀⠀⠁⠀⠂⠈⠀⠨⡀⠀⡈⠀⠐⠀⠀⠀⠐⠀⠠⠀⠄⠀⠠⡢⡣⣙⢜⢌⠳⡔⣄⡑⠄⢌⠢⢐⠡⢐⠄⢢⢝⢜⠮⠐⡡⢊⠔⡑⢢⠘⢔⠡⡑⠈⠢⣑⢾⣕⢯⣻⠀⠀⠄⠂⠁⠠⠀⠌⠀⠂⠐⡀⠸⣌⢇⠀⠄⠂
#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define fo(i, n) for (i = 0; i < n; i++)
#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
#define ll long long
#define deb(x) cout << #x << "=" << x << endl
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(x) memset(x, false, sizeof(x))
#define sortall(x) sort(all(x))
#define tr(it, a) for (auto it = a.begin(); it != a.end(); it++)
#define PI 3.1415926535897932384626
#define mod 1000000007
typedef pair<int, int> pii;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pl> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
int main(){
    int t;
    cin>>t;
    while(t--){
        int n,s,m;cin>>n>>s>>m;
        vector<pair<int,int>> v(n);
        for (int i = 0; i < n; i++) {
            int l,r;cin>>l>>r;
            v[i]=(make_pair(l,r));
        }
        bool flag = false;
        
        if (v[0].first >= s) {
            flag = true;
        }
        if (m - v[n-1].second >= s) {
            flag = true;
        }
        for (int i = 1; i < n;i++) {
            if (v[i].first - v[i-1].second >= s) {
                flag = true;
                break;
            }
        }
        
        if (flag) cout << "YES"<<endl;
    
        else cout << "NO"<<endl;
    
    
    }
}

// #include <iostream>
// #include <vector>
// using namespace std;

// int main() {
//     ios::sync_with_stdio(false);
//     cin.tie(nullptr);
    
//     int t;
//     cin >> t;
    
//     while (t--) {
//         int n, s, m;
//         cin >> n >> s >> m;
        
//         vector<pair<int, int>> intervals(n);
//         for (int i = 0; i < n; ++i) {
//             cin >> intervals[i].first >> intervals[i].second;
//         }
        
//         bool canShower = false;
        
//         // Check the free time before the first interval
//         if (intervals[0].first >= s) {
//             canShower = true;
//         }
        
//         // Check the free time after the last interval
//         if (m - intervals[n-1].second >= s) {
//             canShower = true;
//         }
        
//         // Check the gaps between intervals
//         for (int i = 1; i < n; ++i) {
//             if (intervals[i].first - intervals[i-1].second >= s) {
//                 canShower = true;
//                 break;
//             }
//         }
        
//         if (canShower) {
//             cout << "YES\n";
//         } else {
//             cout << "NO\n";
//         }
//     }
    
//     return 0;
// }
